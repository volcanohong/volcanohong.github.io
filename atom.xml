<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Volcanohong&#39;s Learning Notes</title>
  <subtitle>Enjoy everything in everyday</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://volcanohong.github.com/"/>
  <updated>2016-12-18T20:43:06.000Z</updated>
  <id>http://volcanohong.github.com/</id>
  
  <author>
    <name>Volcanohong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Jhipster MicroService</title>
    <link href="http://volcanohong.github.com/2016/12/18/jhipster-microservice/"/>
    <id>http://volcanohong.github.com/2016/12/18/jhipster-microservice/</id>
    <published>2016-12-18T20:16:51.000Z</published>
    <updated>2016-12-18T20:43:06.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;Introduction-of-JHipster-MS&quot;&gt;&lt;a href=&quot;#Introduction-of-JHipster-MS&quot; class=&quot;headerlink&quot; title=&quot;Introduction of JHipster MS&quot;&gt;&lt;/a&gt;&lt;strong&gt;Introduction of JHipster MS&lt;/strong&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;JHipster Registry&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create Microservice&lt;/strong&gt;&lt;br&gt; a. &lt;strong&gt;Microservice: Job App&lt;/strong&gt;&lt;br&gt; b. &lt;strong&gt;Microservice: Gateway App&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;&lt;br&gt; a. &lt;strong&gt;JWT (JSON Web Token)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Access Control&lt;/strong&gt;&lt;br&gt; a. &lt;strong&gt;Microservice - Job App API&lt;/strong&gt;&lt;br&gt; b. &lt;strong&gt;Microservice - Gateway App API&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;


	&lt;div class=&quot;row&quot;&gt;
    &lt;embed src=&quot;/content/pdf/JHipsterMicroservice-181216.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;
	&lt;/div&gt;


</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;Introduction-of-JHipster-MS&quot;&gt;&lt;a href=&quot;#Introduction-of-JHipster-MS&quot; class=&quot;headerlink&quot; title=&quot;Introduction of JHipster MS&quot;&gt;
    
    </summary>
    
      <category term="Framework" scheme="http://volcanohong.github.com/categories/Framework/"/>
    
    
      <category term="angular" scheme="http://volcanohong.github.com/tags/angular/"/>
    
      <category term="java" scheme="http://volcanohong.github.com/tags/java/"/>
    
      <category term="framework" scheme="http://volcanohong.github.com/tags/framework/"/>
    
      <category term="jhipster" scheme="http://volcanohong.github.com/tags/jhipster/"/>
    
      <category term="microservice" scheme="http://volcanohong.github.com/tags/microservice/"/>
    
  </entry>
  
  <entry>
    <title>Firebase Cloud Messaging Notification</title>
    <link href="http://volcanohong.github.com/2016/12/10/fcm-notification/"/>
    <id>http://volcanohong.github.com/2016/12/10/fcm-notification/</id>
    <published>2016-12-10T20:16:51.000Z</published>
    <updated>2016-12-18T20:51:00.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;Integration-of-Google-FCM-Notification&quot;&gt;&lt;a href=&quot;#Integration-of-Google-FCM-Notification&quot; class=&quot;headerlink&quot; title=&quot;Integration of Google FCM Notification&quot;&gt;&lt;/a&gt;&lt;strong&gt;Integration of Google FCM Notification&lt;/strong&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;br&gt; a. &lt;strong&gt;Key Capability&lt;/strong&gt;&lt;br&gt; b. &lt;strong&gt;FCM Message Type&lt;/strong&gt;&lt;br&gt; c. &lt;strong&gt;Implementation Path&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create FCM Project&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server Side Implementation&lt;/strong&gt;&lt;br&gt; a. &lt;strong&gt;Server Coding&lt;/strong&gt;&lt;br&gt; b. &lt;strong&gt;Server API Test&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;


	&lt;div class=&quot;row&quot;&gt;
    &lt;embed src=&quot;/content/pdf/FirebaseCloudMessagingNotification-181216.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;
	&lt;/div&gt;



</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;Integration-of-Google-FCM-Notification&quot;&gt;&lt;a href=&quot;#Integration-of-Google-FCM-Notification&quot; class=&quot;headerlink&quot; title=&quot;Integra
    
    </summary>
    
      <category term="Java" scheme="http://volcanohong.github.com/categories/Java/"/>
    
    
      <category term="java" scheme="http://volcanohong.github.com/tags/java/"/>
    
      <category term="google" scheme="http://volcanohong.github.com/tags/google/"/>
    
      <category term="fcm" scheme="http://volcanohong.github.com/tags/fcm/"/>
    
      <category term="notification" scheme="http://volcanohong.github.com/tags/notification/"/>
    
  </entry>
  
  <entry>
    <title>Jhipster Project</title>
    <link href="http://volcanohong.github.com/2016/11/18/jhipster-project/"/>
    <id>http://volcanohong.github.com/2016/11/18/jhipster-project/</id>
    <published>2016-11-19T05:37:31.000Z</published>
    <updated>2016-12-18T20:15:20.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;Security-Configuration&quot;&gt;&lt;a href=&quot;#Security-Configuration&quot; class=&quot;headerlink&quot; title=&quot;Security Configuration&quot;&gt;&lt;/a&gt;&lt;strong&gt;Security Configuration&lt;/strong&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h4 id=&quot;JHipster-Security&quot;&gt;&lt;a href=&quot;#JHipster-Security&quot; class=&quot;headerlink&quot; title=&quot;JHipster Security&quot;&gt;&lt;/a&gt;&lt;strong&gt;JHipster Security&lt;/strong&gt;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;To use Spring Security with a Single Web Page Application, like the ones generated by JHipster, you need Ajax login/logout/error views. We have configured Spring Security in order to use those views correctly, and of course we generate all the JavaScript and HTML code for you.&lt;br&gt;By default, JHipster comes with 4 different users:&lt;br&gt;“system”, who is mainly used by our audit logs, when something is done automatically&lt;br&gt;“anonymousUser”, who is given to anonymous users when they do an action&lt;br&gt;“user”, who is a normal user with “ROLE_USER” authorization. His default password is “user”&lt;br&gt;“admin”, who is an admin user with “ROLE_USER” and “ROLE_ADMIN” authorizations. His default password is “admin”&lt;br&gt;For security reasons, you should change those default passwords.&lt;br&gt;More info are provided here: &lt;a href=&quot;https://jhipster.github.io/security/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://jhipster.github.io/security/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Role-Management&quot;&gt;&lt;a href=&quot;#Role-Management&quot; class=&quot;headerlink&quot; title=&quot;Role Management&quot;&gt;&lt;/a&gt;&lt;strong&gt;Role Management&lt;/strong&gt;&lt;/h4&gt;When adding a new ROLE, consider the following steps,&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;Update role data in DB, In &lt;code&gt;src/main/resources/config/liquibase&lt;/code&gt; directory, add new role to &lt;code&gt;authorities.cs&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Update &lt;code&gt;AuthoritiesConstants.java&lt;/code&gt;, add new role constant, and the static method if you need.&lt;/li&gt;
&lt;li&gt;Change the corresponding security control and your logic.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Java-Security-Configuration&quot;&gt;&lt;a href=&quot;#Java-Security-Configuration&quot; class=&quot;headerlink&quot; title=&quot;Java Security Configuration&quot;&gt;&lt;/a&gt;&lt;strong&gt;Java Security Configuration&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Project level &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In &lt;code&gt;SecurityConfiguration.java&lt;/code&gt;, define WebSecurity (e.g., specify which api is an exemption) and HttpSecurity&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(WebSecurity web)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    web.ignoring()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        .antMatchers(&lt;span class=&quot;string&quot;&gt;&quot;/swagger-ui/index.html&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        .antMatchers(&lt;span class=&quot;string&quot;&gt;&quot;/api/register&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        .antMatchers(&lt;span class=&quot;string&quot;&gt;&quot;/api/activate&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In &lt;code&gt;OAuth2ServerConfiguration.java&lt;/code&gt;, prevent an API from OAuth2 authentication.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Object level&lt;br&gt;Allow a particular role to access an API.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@RestController&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@RequestMapping&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;/api&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Secured&lt;/span&gt;(AuthoritiesConstants.USER)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;IpsUserProfileResource&lt;/span&gt; &lt;/span&gt;&amp;#123;...&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Method level&lt;br&gt;Check whether or not the current login user has a particular role.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!SecurityUtils.isUserInRole(AuthoritiesConstants.ADMIN)) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//...&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Angular-Security-Configuration&quot;&gt;&lt;a href=&quot;#Angular-Security-Configuration&quot; class=&quot;headerlink&quot; title=&quot;Angular Security Configuration&quot;&gt;&lt;/a&gt;&lt;strong&gt;Angular Security Configuration&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;Some recommendation here (need explore more and the differences…) &lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;has-role&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;ROLE_ADMIN&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;has-authority&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;ROLE_ADMIN&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;More-Features&quot;&gt;&lt;a href=&quot;#More-Features&quot; class=&quot;headerlink&quot; title=&quot;More Features&quot;&gt;&lt;/a&gt;&lt;strong&gt;More Features&lt;/strong&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h4 id=&quot;OAuth2-Authentication&quot;&gt;&lt;a href=&quot;#OAuth2-Authentication&quot; class=&quot;headerlink&quot; title=&quot;OAuth2 Authentication&quot;&gt;&lt;/a&gt;&lt;strong&gt;OAuth2 Authentication&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;OAuth2 is a stateless security mechanism, so you might prefer it if you want to scale your application across several machines. Spring Security provides an OAuth2 implementation, which we have configured for you.&lt;br&gt;The biggest issue with OAuth2 is that requires to have several database tables in order to store its security tokens. If you are using an SQL database, we provide the necessary Liquibase changlog so that those tables are automatically created for you.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h4 id=&quot;JWT-authentication&quot;&gt;&lt;a href=&quot;#JWT-authentication&quot; class=&quot;headerlink&quot; title=&quot;JWT authentication&quot;&gt;&lt;/a&gt;&lt;strong&gt;JWT authentication&lt;/strong&gt;&lt;/h4&gt;JSON Web Token (JWT) authentication, like OAuth2, is a stateless security mechanism, so it’s another good option if you want to scale on several different servers.&lt;br&gt;This authentication mechanism doesn’t exist by default with Spring Security, it’s a JHipster-specific integration of the Java JWT project. It is easier to use and implement than OAuth2, as it does not require a persistence mechanism, so it works on all SQL and NoSQL options.&lt;br&gt;This solution uses a secure token that holds the user’s login name and authorities. As the token is signed, it cannot be altered by a user.&lt;br&gt;The secret key should be configured in the application.yml file, as the jhipster.security.authentication.jwt.secret property.&lt;/li&gt;
&lt;li&gt;&lt;h4 id=&quot;HTTP-Session-Authentication&quot;&gt;&lt;a href=&quot;#HTTP-Session-Authentication&quot; class=&quot;headerlink&quot; title=&quot;HTTP Session Authentication&quot;&gt;&lt;/a&gt;&lt;strong&gt;HTTP Session Authentication&lt;/strong&gt;&lt;/h4&gt;This is the “classical” Spring Security authentication mechanism, but we have improved it quite significantly. It uses the HTTP Session, so it is a stateful mechanism: if you plan to scale your application on multiple servers, you need to have a load balancer with sticky sessions so that each user stays on the same server.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Improved remember-me mechanism&lt;/strong&gt;&lt;br&gt;We have modified the Spring Security remember-me mechanism so that you have a unique token, that is stored in your database (SQL or NoSQL database, depending on your choice during generation!). We also store more information than the standard implementation, so you have a better understanding of where those tokens come from: IP address, browser, date… And we generate a complete administration screen, so that you can invalidate sessions, for example if you forgot to log out on another computer.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cookie theft protection&lt;/strong&gt;&lt;br&gt;We have added a very complete cookie theft protection mechanism: we store your security information in a cookie, as well as in the database, and each time a user logs in we modify those values and check if they have been altered. That way, if a user ever steals your cookie, he will be able to use only once, at most.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CSRF protection&lt;/strong&gt;&lt;br&gt;Spring Security and AngularJS both have CSRF protection out-of-the-box, but unfortunately they don’t use the same cookies or HTTP headers! In practice, you have in fact no protection at all for CSRF attacks. Of course, we re-configure both tools so that they correctly work together.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Social-Login&quot;&gt;&lt;a href=&quot;#Social-Login&quot; class=&quot;headerlink&quot; title=&quot;Social Login&quot;&gt;&lt;/a&gt;&lt;strong&gt;Social Login&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;JHipster provide “social login”, using Spring Social, so users can connect to your application using their Google, Facebook or Twitter authentication. This is configured using Sping Boot’s starter modules.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;DB-Management&quot;&gt;&lt;a href=&quot;#DB-Management&quot; class=&quot;headerlink&quot; title=&quot;DB Management&quot;&gt;&lt;/a&gt;&lt;strong&gt;DB Management&lt;/strong&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h4 id=&quot;Update-DB-Manually&quot;&gt;&lt;a href=&quot;#Update-DB-Manually&quot; class=&quot;headerlink&quot; title=&quot;Update DB Manually&quot;&gt;&lt;/a&gt;&lt;strong&gt;Update DB Manually&lt;/strong&gt;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Database updates by manually editing the change log&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;  If you prefer (or need) to do a database update manually, here is the development workflow:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;Modify your JPA entity (add a field, a relationship, etc.)&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a new &lt;code&gt;change log&lt;/code&gt; in your &lt;code&gt;src/main/resources/config/liquibase/changelog&lt;/code&gt; directory. The files in that directory are prefixed by their creation date (in &lt;code&gt;yyyyMMddHHmmss&lt;/code&gt; format), and then have a title describing what they do. For example, &lt;code&gt;20141006152300_added_price_to_product.xml&lt;/code&gt; is a good name.&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;databaseChangeLog&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;xmlns&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.liquibase.org/xml/ns/dbchangelog&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                   &lt;span class=&quot;attr&quot;&gt;xmlns:ext&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.liquibase.org/xml/ns/dbchangelog-ext&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                   &lt;span class=&quot;attr&quot;&gt;xmlns:xsi&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                   &lt;span class=&quot;attr&quot;&gt;xsi:schemaLocation&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd&quot;&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;changeSet&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;author&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;volcanohong (generated)&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;1481426741244-1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;addColumn&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;tableName&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;loyalty_scheme&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;column&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;created_date&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;timestamp&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;addColumn&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;changeSet&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;changeSet&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;author&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;volcanohong (generated)&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;1481426741244-2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;addColumn&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;tableName&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;loyalty_scheme&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;column&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;last_modified_date&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;timestamp&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;addColumn&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;changeSet&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;databaseChangeLog&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add this “change log” file in your &lt;code&gt;src/main/resources/config/liquibase/master.xml&lt;/code&gt; file, so it is applied the next time you run your application&lt;br&gt;More information for using &lt;a href=&quot;http://www.liquibase.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Liquibase&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; that in &lt;code&gt;pom.xml&lt;/code&gt;, liquibase plugin configuration needs to be updated accordingly.&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.liquibase&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;liquibase-maven-plugin&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;liquibase.version&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.javassist&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;javassist&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;3.18.2-GA&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.liquibase.ext&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;liquibase-hibernate4&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;liquibase-hibernate4.version&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-data-jpa&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;project.parent.version&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;configuration&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;changeLogFile&amp;gt;src/main/resources/config/liquibase/master.xml&amp;lt;/changeLogFile&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;diffChangeLogFile&amp;gt;src/main/resources/config/liquibase/changelog/$&amp;#123;maven.build.timestamp&amp;#125;_changelog.xml&amp;lt;/diffChangeLogFile&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;driver&amp;gt;org.h2.Driver&amp;lt;/driver&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;url&amp;gt;jdbc:h2:file:./target/h2db/db/xxxisg&amp;lt;/url&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;defaultSchemaName /&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;username&amp;gt;xxxISG&amp;lt;/username&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;password /&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;referenceUrl&amp;gt;hibernate:spring:com.xxx.isg.domain?dialect=org.hibernate.dialect.H2Dialect&amp;amp;amp;hibernate.ejb.naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringNamingStrategy&amp;lt;/referenceUrl&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;verbose&amp;gt;true&amp;lt;/verbose&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;logging&amp;gt;debug&amp;lt;/logging&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;diffExcludeObjects&amp;gt;oauth_access_token, oauth_approvals, oauth_client_details, oauth_client_token, oauth_code, oauth_refresh_token&amp;lt;/diffExcludeObjects&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;/configuration&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;changeLogFile&lt;/span&gt;&amp;gt;&lt;/span&gt;src/main/resources/config/liquibase/master.xml&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;changeLogFile&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;diffChangeLogFile&lt;/span&gt;&amp;gt;&lt;/span&gt;src/main/resources/config/liquibase/changelog/$&amp;#123;maven.build.timestamp&amp;#125;_changelog.xml&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;diffChangeLogFile&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;driver&lt;/span&gt;&amp;gt;&lt;/span&gt;com.microsoft.sqlserver.jdbc.SQLServerDriver&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;driver&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;url&lt;/span&gt;&amp;gt;&lt;/span&gt;jdbc:sqlserver://xxx.xxx.net:1433;databaseName=xxx_iscango&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;url&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;defaultSchemaName&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;username&lt;/span&gt;&amp;gt;&lt;/span&gt;admin&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;username&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;password&lt;/span&gt;&amp;gt;&lt;/span&gt;admin&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;password&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;referenceUrl&lt;/span&gt;&amp;gt;&lt;/span&gt;hibernate:spring:com.xxx.isg.domain?dialect=org.hibernate.dialect.H2Dialect&amp;amp;amp;hibernate.ejb.naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringNamingStrategy&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;referenceUrl&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;verbose&lt;/span&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;verbose&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;logging&lt;/span&gt;&amp;gt;&lt;/span&gt;debug&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;logging&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;diffExcludeObjects&lt;/span&gt;&amp;gt;&lt;/span&gt;oauth_access_token, oauth_approvals, oauth_client_details, oauth_client_token, oauth_code, oauth_refresh_token&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;diffExcludeObjects&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;And there is no need to change any existing &lt;code&gt;xml&lt;/code&gt; files except &lt;code&gt;master.xml&lt;/code&gt;. Otherwise, a liquibase checksum validation error will raise.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Load-Data-to-DB&quot;&gt;&lt;a href=&quot;#Load-Data-to-DB&quot; class=&quot;headerlink&quot; title=&quot;Load Data to DB&quot;&gt;&lt;/a&gt;&lt;strong&gt;Load Data to DB&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;Create a &lt;code&gt;.csv&lt;/code&gt; file with data in &lt;code&gt;src/main/resources/config/liquibase&lt;/code&gt; directory.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a &lt;code&gt;change log&lt;/code&gt; in &lt;code&gt;src/main/resources/config/liquibase/changelog&lt;/code&gt; directory. For example, a &lt;code&gt;xml&lt;/code&gt; file with name &lt;code&gt;20161140000001_load_data_UserDevice.xml&lt;/code&gt;, which specify the changelog id, data file, separator and table name.&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;databaseChangeLog&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;xmlns&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.liquibase.org/xml/ns/dbchangelog&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;xmlns:xsi&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;xsi:schemaLocation&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd&quot;&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Loaded data for UserDevice.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    --&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;changeSet&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;20161110000001-3&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;author&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;jhipster&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;loadData&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;encoding&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                  &lt;span class=&quot;attr&quot;&gt;file&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;config/liquibase/user_device.csv&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                  &lt;span class=&quot;attr&quot;&gt;separator&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                  &lt;span class=&quot;attr&quot;&gt;tableName&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;user_device&quot;&lt;/span&gt;/&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;changeSet&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;databaseChangeLog&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update &lt;code&gt;master.xml&lt;/code&gt; file with the changelog of loading data.&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;databaseChangeLog&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;file&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;classpath:config/liquibase/changelog/20161140000001_load_data_UserDevice.xml&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;relativeToChangelogFile&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;false&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;databaseChangeLog&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;run &lt;code&gt;./mvnw clean&lt;/code&gt; to clean the DB.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Update-Default-Data&quot;&gt;&lt;a href=&quot;#Update-Default-Data&quot; class=&quot;headerlink&quot; title=&quot;Update Default Data&quot;&gt;&lt;/a&gt;&lt;strong&gt;Update Default Data&lt;/strong&gt;&lt;/h4&gt;Here taking &lt;code&gt;USER&lt;/code&gt; and &lt;code&gt;USER_AUTHORITY&lt;/code&gt; table for example. &lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;In file &lt;code&gt;users.csv&lt;/code&gt;, update all default user data&lt;br&gt;The password should be encrypted.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.springframework.security.crypto.password.PasswordEncoder;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Inject&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; PasswordEncoder passwordEncoder;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;String encryptedPassword = passwordEncoder.encode(password);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In file &lt;code&gt;users_authorities.csv&lt;/code&gt;, update user authorities bridge table.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run maven test to make sure all tests can pass. For example, if the admin user is changed, one of the test in &lt;code&gt;UserResourceIntTest.java&lt;/code&gt; might be failed.&lt;br&gt;&lt;img src=&quot;/content/images/2016/jhipster_load_data.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;Security-Configuration&quot;&gt;&lt;a href=&quot;#Security-Configuration&quot; class=&quot;headerlink&quot; title=&quot;Security Configuration&quot;&gt;&lt;/a&gt;&lt;strong&gt;Security Configuration&lt;/strong&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h4 id=&quot;JHipster-Security&quot;&gt;&lt;a href=&quot;#JHipster-Security&quot; class=&quot;headerlink&quot; title=&quot;JHipster Security&quot;&gt;&lt;/a&gt;&lt;strong&gt;JHipster Security&lt;/strong&gt;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;To use Spring Security with a Single Web Page Application, like the ones generated by JHipster, you need Ajax login/logout/error views. We have configured Spring Security in order to use those views correctly, and of course we generate all the JavaScript and HTML code for you.&lt;br&gt;By default, JHipster comes with 4 different users:&lt;br&gt;“system”, who is mainly used by our audit logs, when something is done automatically&lt;br&gt;“anonymousUser”, who is given to anonymous users when they do an action&lt;br&gt;“user”, who is a normal user with “ROLE_USER” authorization. His default password is “user”&lt;br&gt;“admin”, who is an admin user with “ROLE_USER” and “ROLE_ADMIN” authorizations. His default password is “admin”&lt;br&gt;For security reasons, you should change those default passwords.&lt;br&gt;More info are provided here: &lt;a href=&quot;https://jhipster.github.io/security/&quot;&gt;https://jhipster.github.io/security/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Framework" scheme="http://volcanohong.github.com/categories/Framework/"/>
    
    
      <category term="java" scheme="http://volcanohong.github.com/tags/java/"/>
    
      <category term="framework" scheme="http://volcanohong.github.com/tags/framework/"/>
    
      <category term="jhipster" scheme="http://volcanohong.github.com/tags/jhipster/"/>
    
  </entry>
  
  <entry>
    <title>Jhipster Notes</title>
    <link href="http://volcanohong.github.com/2016/11/11/jhipster-notes/"/>
    <id>http://volcanohong.github.com/2016/11/11/jhipster-notes/</id>
    <published>2016-11-12T05:37:31.000Z</published>
    <updated>2016-11-19T15:27:36.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;Install-JHipster&quot;&gt;&lt;a href=&quot;#Install-JHipster&quot; class=&quot;headerlink&quot; title=&quot;Install JHipster&quot;&gt;&lt;/a&gt;&lt;strong&gt;Install JHipster&lt;/strong&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Requirement: Java 8, Maven, Git, Node.js&lt;/p&gt;
&lt;p&gt;Start with installing &lt;code&gt;Yeoman&lt;/code&gt; and &lt;code&gt;Bower&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install -g yo&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://yeoman.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;YEOMAN&lt;/a&gt;, the web’s scaffording tool for webapps. Yeoman helps you to kickstart new projects, prescribing best practices and tools to help you stay productive.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;npm install -g bower&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://bower.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;BOWER&lt;/a&gt;, a package manager for the web. Web sites are made of lots of things — frameworks, libraries, assets, and utilities. Bower manages all these things for you. Bower keeps track of these packages in a manifest file, &lt;code&gt;bower.json&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Then, install &lt;code&gt;Grunt&lt;/code&gt; and &lt;code&gt;jHipster&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install -g grunt-cli&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://gruntjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GRUNT&lt;/a&gt;, the javascript task runner. With literally hundreds of plugins to choose from, you can use Grunt to automate just about anything with a minimum of effort.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;npm install -g generator-jhipster&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://jhipster.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JHipster&lt;/a&gt; is a fully Open Source, widely used application generator. Easily create high-quality Spring Boot + AngularJS projects!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;We may also need to do this.&lt;br&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bower install&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And option for installing &lt;code&gt;Gulp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gulp install&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://gulpjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gulp&lt;/a&gt; is a task/build runner for development. It allows you to do a lot of stuff within your development workflow. You can compile sass files, uglify and compress js files and much more. The kicker for gulp is that its a streaming build system which doesn’t write temp files. It’s like Pipes in bash. One task flow into another. Gulp could be compared to Grunt in its usage. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;New-Project&quot;&gt;&lt;a href=&quot;#New-Project&quot; class=&quot;headerlink&quot; title=&quot;New Project&quot;&gt;&lt;/a&gt;&lt;strong&gt;New Project&lt;/strong&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Invoke &lt;code&gt;jHipster&lt;/code&gt; to create a new project&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yo jhipster&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;On running this command, it needs to answer questions about how the application to be generated.&lt;br&gt;&lt;img src=&quot;/content/images/2016/jhipster_generating_app.png&quot; alt=&quot;Generating the application&quot;&gt;&lt;/p&gt;
&lt;p&gt;After answering all the questions, JHipster created a whole bunch of files.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Run-Test&quot;&gt;&lt;a href=&quot;#Run-Test&quot; class=&quot;headerlink&quot; title=&quot;Run Test&quot;&gt;&lt;/a&gt;&lt;strong&gt;Run Test&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To make sure everything was good to go, &lt;/p&gt;
&lt;p&gt;Run unit tests using &lt;code&gt;grunt test&lt;/code&gt; or &lt;code&gt;./mvnw test&lt;/code&gt; (or &lt;code&gt;mvn test&lt;/code&gt; if you have maven).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Run-Project&quot;&gt;&lt;a href=&quot;#Run-Project&quot; class=&quot;headerlink&quot; title=&quot;Run Project&quot;&gt;&lt;/a&gt;&lt;strong&gt;Run Project&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Command for running a project&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./mvnw&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Whenever the DB is updated, it has to clean the &lt;code&gt;/target&lt;/code&gt; file which including temporary and DB files to initialize the DB.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./mvnw clean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Sometimes, when the temporary files are deleted, the app may raise error like &lt;code&gt;... bean not found&lt;/code&gt;. Try to avoid it by compile again&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./mvnw compile&lt;/code&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Update-Jhipster&quot;&gt;&lt;a href=&quot;#Update-Jhipster&quot; class=&quot;headerlink&quot; title=&quot;Update Jhipster&quot;&gt;&lt;/a&gt;&lt;strong&gt;Update Jhipster&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Update &lt;code&gt;jHipster&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm update -g generator-jhipster&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;This installs the latest version of JHipster, but does nothing to upgrade the project. Then, run the following command to update the project.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;yo jhipster&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Add-Material-Design&quot;&gt;&lt;a href=&quot;#Add-Material-Design&quot; class=&quot;headerlink&quot; title=&quot;Add Material Design&quot;&gt;&lt;/a&gt;&lt;strong&gt;Add Material Design&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For instance,&lt;br&gt;Check &lt;code&gt;bower.json&lt;/code&gt; with&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;quot;bootstrap-material-design&amp;quot;: &amp;quot;~0.3.0&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;At bottom of &lt;code&gt;index.html&lt;/code&gt; (&lt;code&gt;src/main/webapp/index.html&lt;/code&gt;), add&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $.material.init()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Liquibase-Inconsistency&quot;&gt;&lt;a href=&quot;#Liquibase-Inconsistency&quot; class=&quot;headerlink&quot; title=&quot;Liquibase Inconsistency&quot;&gt;&lt;/a&gt;&lt;strong&gt;Liquibase Inconsistency&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you add or modify a JPA entity, you will need to update your DB schema.&lt;/p&gt;
&lt;p&gt;If you have choosen to use MySQL, MariaDB or PostgreSQL in development, you can use the &lt;code&gt;./mvnw liquibase:diff&lt;/code&gt; goal to automatically generate a changelog.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Entity-Creation-or-Update&quot;&gt;&lt;a href=&quot;#Entity-Creation-or-Update&quot; class=&quot;headerlink&quot; title=&quot;Entity Creation or Update&quot;&gt;&lt;/a&gt;&lt;strong&gt;Entity Creation or Update&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Method 1&lt;/strong&gt;: The jhipster command used to create an entity, then in command line, answer the questions, such as field name, type, constraints and relationships to other entities.&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;yo jhipster:entity &amp;lt;name&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Method 2&lt;/strong&gt;: Generating an entity directily by json files.&lt;/p&gt;
&lt;p&gt;For instance, first creating json file, e.g., &lt;code&gt;UserGroup.json&lt;/code&gt;, then, run &lt;code&gt;yo jhipster:entity userGroup&lt;/code&gt; and re-gernerate the entity.&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;fluentMethods&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;relationships&quot;&lt;/span&gt;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;relationshipType&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;many-to-one&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;relationshipName&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;loyaltyScheme&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;otherEntityName&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;loyaltyScheme&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;otherEntityField&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;fields&quot;&lt;/span&gt;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;fieldName&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;fieldType&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;String&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;fieldValidateRules&quot;&lt;/span&gt;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;required&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            ]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;fieldName&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;fieldType&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Integer&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;fieldName&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;gender&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;fieldType&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;GenderType&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;fieldValues&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;M,F&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;changelogDate&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;20161107000001&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;dto&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;mapstruct&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;service&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;no&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;entityTableName&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;user_group&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;pagination&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;infinite-scroll&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The above json file define the entity name, fields, relationships, changelog id,  whether or not to generate DTO and service layers, the style of pagination at the same time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Method 3&lt;/strong&gt;: Using &lt;a href=&quot;https://jhipster.github.io/jdl/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JDL&lt;/a&gt; to create a whole bunch of entities based on DB schema.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;Jhipster-Domain-Language-JDL&quot;&gt;&lt;a href=&quot;#Jhipster-Domain-Language-JDL&quot; class=&quot;headerlink&quot; title=&quot;Jhipster Domain Language (JDL)&quot;&gt;&lt;/a&gt;&lt;strong&gt;Jhipster Domain Language (JDL)&lt;/strong&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;a href=&quot;https://jhipster.github.io/jdl/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JDL&lt;/a&gt; is a JHipster specific domain language which describes all the entities and their relationships in a single file (or more than one) with a simple and user-friendly syntax.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/content/images/2016/jhipster_entity_jdl.png&quot; alt=&quot;Generating entity by JDL&quot;&gt;&lt;/p&gt;
&lt;p&gt;Entity syntax:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;entity name&lt;/code&gt; is the name of the entity,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;field name&lt;/code&gt; the name of one field of the entity,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type&lt;/code&gt; the JHipster supported type of the field,&lt;/li&gt;
&lt;li&gt;and as an option &lt;validation&gt; the validations for the field.&lt;/validation&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;entity Author &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    name String required,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    address String required maxlength(100),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    age Integer required min(18)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;relationship (OneToMany | ManyToOne | OneToOne | ManyToMany) &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;from entity&amp;gt;[&amp;#123;&amp;lt;relationship name&amp;gt;&amp;#125;] to &amp;lt;to entity&amp;gt;[&amp;#123;&amp;lt;relationship name&amp;gt;&amp;#125;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;For example,&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;relationship OneToMany &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  Author&amp;#123;book&amp;#125; to Book&amp;#123;writer(name)&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Command for jhipster to create entity by using JDL file&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;yo jhipster:import-jdl jhipster-jdl.jh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;Q-amp-A&quot;&gt;&lt;a href=&quot;#Q-amp-A&quot; class=&quot;headerlink&quot; title=&quot;Q &amp;amp; A&quot;&gt;&lt;/a&gt;&lt;strong&gt;Q &amp;amp; A&lt;/strong&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Delete a entity ?&lt;br&gt;&lt;em&gt;Currently, jhipster has no function to delete an entity after creating it (20+ files). The best way is using version control to revert to the version before creating new entities.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make Foreign Key to be required field?&lt;br&gt;&lt;em&gt;All the relationships in jhipster is a loose control. So the FK cannot set to be required when creating entities.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Ref&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://jhipster.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JHipster&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;Install-JHipster&quot;&gt;&lt;a href=&quot;#Install-JHipster&quot; class=&quot;headerlink&quot; title=&quot;Install JHipster&quot;&gt;&lt;/a&gt;&lt;strong&gt;Install JHipster&lt;/strong&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Requirement: Java 8, Maven, Git, Node.js&lt;/p&gt;
&lt;p&gt;Start with installing &lt;code&gt;Yeoman&lt;/code&gt; and &lt;code&gt;Bower&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install -g yo&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://yeoman.io/&quot;&gt;YEOMAN&lt;/a&gt;, the web’s scaffording tool for webapps. Yeoman helps you to kickstart new projects, prescribing best practices and tools to help you stay productive.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;npm install -g bower&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://bower.io/&quot;&gt;BOWER&lt;/a&gt;, a package manager for the web. Web sites are made of lots of things — frameworks, libraries, assets, and utilities. Bower manages all these things for you. Bower keeps track of these packages in a manifest file, &lt;code&gt;bower.json&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Then, install &lt;code&gt;Grunt&lt;/code&gt; and &lt;code&gt;jHipster&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install -g grunt-cli&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://gruntjs.com/&quot;&gt;GRUNT&lt;/a&gt;, the javascript task runner. With literally hundreds of plugins to choose from, you can use Grunt to automate just about anything with a minimum of effort.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;npm install -g generator-jhipster&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://jhipster.github.io/&quot;&gt;JHipster&lt;/a&gt; is a fully Open Source, widely used application generator. Easily create high-quality Spring Boot + AngularJS projects!&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Framework" scheme="http://volcanohong.github.com/categories/Framework/"/>
    
    
      <category term="java" scheme="http://volcanohong.github.com/tags/java/"/>
    
      <category term="framework" scheme="http://volcanohong.github.com/tags/framework/"/>
    
      <category term="jhipster" scheme="http://volcanohong.github.com/tags/jhipster/"/>
    
  </entry>
  
  <entry>
    <title>AngularJS notes I</title>
    <link href="http://volcanohong.github.com/2016/11/01/angularjs-notes-1/"/>
    <id>http://volcanohong.github.com/2016/11/01/angularjs-notes-1/</id>
    <published>2016-11-02T04:37:31.000Z</published>
    <updated>2016-11-08T03:25:11.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Error-digest-already-in-progress-when-calling-scope-apply&quot;&gt;&lt;a href=&quot;#Error-digest-already-in-progress-when-calling-scope-apply&quot; class=&quot;headerlink&quot; title=&quot;Error: $digest already in progress when calling $scope.$apply()&quot;&gt;&lt;/a&gt;&lt;strong&gt;Error: &lt;code&gt;$digest&lt;/code&gt; already in progress when calling &lt;code&gt;$scope.$apply()&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Raise error when calling &lt;code&gt;$scope.$apply()&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$scope.$apply(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    vm.error = &lt;span class=&quot;string&quot;&gt;&#39;ERROR&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Problem is fixed by calling &lt;code&gt;$timeout&lt;/code&gt; instead.&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$timeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//code here will run afterwards&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   vm.error = &lt;span class=&quot;string&quot;&gt;&#39;ERROR&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;Comments:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Simply using &lt;code&gt;$timeout&lt;/code&gt; is not the best nor the right solution. Also, make sure that if you are concerned by performances or scalability.&lt;/p&gt;
&lt;p&gt;Things we should know&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;$$phase&lt;/code&gt;&lt;/strong&gt; is private to the framework and there are good reasons for that.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;$timeout(callback)&lt;/code&gt;&lt;/strong&gt; will wait until the current digest cycle (if any) is done, then execute the callback, then run at the end a full &lt;code&gt;$apply&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;$timeout(callback, delay, false)&lt;/code&gt;&lt;/strong&gt; will do the same (with an optional delay before executing the callback), but will not fire an &lt;code&gt;$apply&lt;/code&gt; (third argument) which saves performances if you didn’t modify your Angular model (&lt;code&gt;$scope&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;$scope.$apply(callback)&lt;/code&gt;&lt;/strong&gt; invokes, among other things, &lt;strong&gt;&lt;code&gt;$rootScope.$digest&lt;/code&gt;&lt;/strong&gt;, which means it will redigest the root scope of the application and all of its children, even if you’re within an isolated scope.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;$scope.$digest()&lt;/code&gt;&lt;/strong&gt; will simply sync its model to the view, but will not digest its parents scope, which can save a lot of performances when working on an isolated part of your HTML with an isolated scope (from a directive mostly). &lt;code&gt;$digest&lt;/code&gt; does not take a callback: you execute the code, then digest.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;$scope.$evalAsync(callback)&lt;/code&gt;&lt;/strong&gt; has been introduced with angularjs 1.2, and will probably solve most of your troubles. Please refer to the last paragraph to learn more about it.&lt;br&gt;if you get the &lt;code&gt;$digest&lt;/code&gt; already in progress error, then your architecture is wrong: either you don’t need to redigest your scope, or you should not be in charge of that (see below).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How to structure your code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When you get that error, you’re trying to digest your scope while it’s already in progress: since you don’t know the state of your scope at that point, you’re not in charge of dealing with its digestion.&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;editModel&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $scope.someVar = someVal;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* Do not apply your scope here since we don&#39;t know if that function is called synchronously from Angular or from an asynchronous code */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Processed by Angular, for instance called by a ng-click directive&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$scope.applyModelSynchronously = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// No need to digest&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    editModel();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Any kind of asynchronous code, for instance a server request&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;callServer(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* That code is not watched nor digested by Angular, thus we can safely $apply it */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $scope.$apply(editModel);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;And if you know what you’re doing and working on an isolated small directive while part of a big Angular application, you could prefer &lt;code&gt;$digest&lt;/code&gt; instead over &lt;code&gt;$apply&lt;/code&gt; to save performances.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update since Angularjs 1.2&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A new, powerful method has been added to any &lt;code&gt;$scope: $evalAsync&lt;/code&gt;. Basically, it will execute its callback within the current digest cycle if one is occurring, otherwise a new digest cycle will start executing the callback.&lt;/p&gt;
&lt;p&gt;That is still not as good as a &lt;code&gt;$scope.$digest&lt;/code&gt; if you really know that you only need to synchronize an isolated part of your HTML (since a new &lt;code&gt;$apply&lt;/code&gt; will be triggered if none is in progress), but this is the best solution when you are executing a function which you cannot know it if will be executed synchronously or not, for instance after fetching a resource potentially cached: sometimes this will require an async call to a server, otherwise the resource will be locally fetched synchronously.&lt;/p&gt;
&lt;p&gt;In these cases and all the others where you had a ! &lt;code&gt;$scope.$$phase&lt;/code&gt;, be sure to use &lt;code&gt;$scope.$evalAsync(callback)&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Ref&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://angular.io/docs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;angular docs.&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Error-digest-already-in-progress-when-calling-scope-apply&quot;&gt;&lt;a href=&quot;#Error-digest-already-in-progress-when-calling-scope-apply&quot; class=&quot;headerlink&quot; title=&quot;Error: $digest already in progress when calling $scope.$apply()&quot;&gt;&lt;/a&gt;&lt;strong&gt;Error: &lt;code&gt;$digest&lt;/code&gt; already in progress when calling &lt;code&gt;$scope.$apply()&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Raise error when calling &lt;code&gt;$scope.$apply()&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$scope.$apply(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    vm.error = &lt;span class=&quot;string&quot;&gt;&#39;ERROR&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Problem is fixed by calling &lt;code&gt;$timeout&lt;/code&gt; instead.&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$timeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//code here will run afterwards&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   vm.error = &lt;span class=&quot;string&quot;&gt;&#39;ERROR&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Javascript" scheme="http://volcanohong.github.com/categories/Javascript/"/>
    
    
      <category term="javascript" scheme="http://volcanohong.github.com/tags/javascript/"/>
    
      <category term="html" scheme="http://volcanohong.github.com/tags/html/"/>
    
      <category term="coding" scheme="http://volcanohong.github.com/tags/coding/"/>
    
      <category term="angular" scheme="http://volcanohong.github.com/tags/angular/"/>
    
  </entry>
  
  <entry>
    <title>Java QR code</title>
    <link href="http://volcanohong.github.com/2016/10/07/java-qr-code/"/>
    <id>http://volcanohong.github.com/2016/10/07/java-qr-code/</id>
    <published>2016-10-08T04:27:41.000Z</published>
    <updated>2016-11-08T03:30:29.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;QR-Code-Generator&quot;&gt;&lt;a href=&quot;#QR-Code-Generator&quot; class=&quot;headerlink&quot; title=&quot;QR Code Generator&quot;&gt;&lt;/a&gt;&lt;strong&gt;QR Code Generator&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Utilize google QR code generator …&lt;br&gt;Define the &lt;code&gt;charset&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;, and &lt;code&gt;size&lt;/code&gt;.&lt;br&gt;Use &lt;code&gt;MatrixToImageWriter&lt;/code&gt; to write a &lt;code&gt;BitMatrix&lt;/code&gt; to &lt;code&gt;BufferedImage&lt;/code&gt;, file or stream. &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;em&gt;toBufferedImage&lt;/em&gt; method&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; BufferedImage &lt;span class=&quot;title&quot;&gt;toBufferedImage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(BitMatrix matrix)&lt;/span&gt; &lt;/span&gt;&amp;#123;...&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;encode&lt;/em&gt; method&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; BitMatrix &lt;span class=&quot;title&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String contents, BarcodeFormat format, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; width, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; height, Map&amp;lt;EncodeHintType, ?&amp;gt; hints)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; WriterException &lt;/span&gt;&amp;#123;...&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;decode&lt;/em&gt; method&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Result &lt;span class=&quot;title&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(BinaryBitmap image, Map&amp;lt;DecodeHintType, ?&amp;gt; hints)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; NotFoundException &lt;/span&gt;&amp;#123;...&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Available &lt;code&gt;BarcodeFormat&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; BarcodeFormat &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    AZTEC,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    CODABAR,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    CODE_39,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    CODE_93,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    CODE_128,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    DATA_MATRIX,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    EAN_8,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    EAN_13,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ITF,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    MAXICODE,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    PDF_417,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    QR_CODE,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    RSS_14,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    RSS_EXPANDED,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    UPC_A,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    UPC_E,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    UPC_EAN_EXTENSION;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;An example goes here …&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.google.zxing.*;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.google.zxing.client.j2se.BufferedImageLuminanceSource;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.google.zxing.client.j2se.MatrixToImageWriter;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.google.zxing.common.HybridBinarizer;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.imageio.ImageIO;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.*;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ZxingUtil&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Map&amp;lt;EncodeHintType, ErrorCorrectionLevel&amp;gt; encodeMap = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;EncodeHintType, ErrorCorrectionLevel&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Map&amp;lt;DecodeHintType, ErrorCorrectionLevel&amp;gt; decodeMap = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;DecodeHintType, ErrorCorrectionLevel&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String charset=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;, format=&lt;span class=&quot;string&quot;&gt;&quot;png&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; size = &lt;span class=&quot;number&quot;&gt;150&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ZxingUtil&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     * QR code encoder&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     *&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; data data to be encoded&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; WriterException&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; IOException&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; BufferedImage &lt;span class=&quot;title&quot;&gt;createQRCode&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String data)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; WriterException, IOException &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; MatrixToImageWriter.toBufferedImage(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MultiFormatWriter()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                .encode(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; String(data.getBytes(charset), charset),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    BarcodeFormat.QR_CODE, size, size, encodeMap));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     * QR code decoder&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     *&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; image QR code image&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@return&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; FileNotFoundException&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; IOException&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; NotFoundException&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;readQRCode&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] image)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; FileNotFoundException, IOException, NotFoundException &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MultiFormatReader().decode(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BinaryBitmap(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HybridBinarizer(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BufferedImageLuminanceSource(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        ImageIO.read(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ByteArrayInputStream(image))))), decodeMap).getText();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Example-to-Create-QR-Code&quot;&gt;&lt;a href=&quot;#Example-to-Create-QR-Code&quot; class=&quot;headerlink&quot; title=&quot;Example to Create QR Code&quot;&gt;&lt;/a&gt;&lt;strong&gt;Example to Create QR Code&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An example of using above method to create QR code …&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * create user QR scan code&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; userScanCodeDTO&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@return&lt;/span&gt; Optional&amp;lt;BufferedImage&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Optional&amp;lt;Image&amp;gt; &lt;span class=&quot;title&quot;&gt;createUserQRCode&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@NotNull UserScanCodeDTO userScanCodeDTO)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    log.debug(&lt;span class=&quot;string&quot;&gt;&quot;create user QR code : &amp;#123;&amp;#125;&quot;&lt;/span&gt;, userScanCodeDTO);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Optional.of(userScanCodeDTO)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        .map(usc -&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            BufferedImage bufferedImage = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                bufferedImage = ZxingUtil.createQRCode(usc.getScanCode());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                log.debug(e.getMessage());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bufferedImage;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        .map(bufferedImage -&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            ByteArrayOutputStream bs = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ByteArrayOutputStream();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            Image image = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                ImageIO.write(bufferedImage, &lt;span class=&quot;string&quot;&gt;&quot;png&quot;&lt;/span&gt;, bs);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                 image = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Image()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    .name(userScanCodeDTO.getScanCode())&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    .image(bs.toByteArray())&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    .imageContentType(&lt;span class=&quot;string&quot;&gt;&quot;image/png&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                bs.close();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                log.debug(e.getMessage());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; image;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Ref:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://zxing.github.io/zxing/apidocs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ZXing 3.3.0 API&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;QR-Code-Generator&quot;&gt;&lt;a href=&quot;#QR-Code-Generator&quot; class=&quot;headerlink&quot; title=&quot;QR Code Generator&quot;&gt;&lt;/a&gt;&lt;strong&gt;QR Code Generator&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Utilize google QR code generator …&lt;br&gt;Define the &lt;code&gt;charset&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;, and &lt;code&gt;size&lt;/code&gt;.&lt;br&gt;Use &lt;code&gt;MatrixToImageWriter&lt;/code&gt; to write a &lt;code&gt;BitMatrix&lt;/code&gt; to &lt;code&gt;BufferedImage&lt;/code&gt;, file or stream. &lt;/p&gt;
    
    </summary>
    
      <category term="Blog" scheme="http://volcanohong.github.com/categories/Blog/"/>
    
    
      <category term="java" scheme="http://volcanohong.github.com/tags/java/"/>
    
      <category term="blog" scheme="http://volcanohong.github.com/tags/blog/"/>
    
      <category term="qrcode" scheme="http://volcanohong.github.com/tags/qrcode/"/>
    
  </entry>
  
  <entry>
    <title>Java8 notes I</title>
    <link href="http://volcanohong.github.com/2016/10/06/java8-notes-1/"/>
    <id>http://volcanohong.github.com/2016/10/06/java8-notes-1/</id>
    <published>2016-10-07T03:22:12.000Z</published>
    <updated>2016-11-06T02:51:35.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;java-util-Optional&quot;&gt;&lt;a href=&quot;#java-util-Optional&quot; class=&quot;headerlink&quot; title=&quot;java.util.Optional&quot;&gt;&lt;/a&gt;&lt;strong&gt;java.util.Optional&lt;t&gt;&lt;/t&gt;&lt;/strong&gt;&lt;/h4&gt;Imagine &lt;code&gt;Optional&lt;/code&gt; as a container that may or may not contain some value. Just like all references in Java can point to some object or be null, &lt;code&gt;Option&lt;/code&gt; may enclose some (non-null!) reference or be empty.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Optional&lt;/code&gt; instead of plain null is statically checked at compile time and much more informative as it clearly indicates that a given variable may be present or not. Of course it requires some discipline - you should never assign null to any variable any more.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There are few ways of creating &lt;code&gt;Optional&lt;/code&gt;:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;\\Optional must contain not &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; value and will &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; an exception &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; is passed. &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;opt = Optional.of(notNull);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;\\ofNullable() &lt;span class=&quot;function&quot;&gt;will either return empty or &lt;span class=&quot;title&quot;&gt;present&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(set)&lt;/span&gt; Optional.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;opt = Optional.ofNullable(mayBeNull);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;\\empty() always &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; empty Optional, corresponding to &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;. It’s a singleton because Optional&amp;lt;T&amp;gt; is immutable.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;opt = Optional.empty();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;In this case, &lt;code&gt;opt&lt;/code&gt; is never null, but may or may not contain some value (present or empty).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h5 id=&quot;ifPresent-do-something-when-Optional-is-set&quot;&gt;&lt;a href=&quot;#ifPresent-do-something-when-Optional-is-set&quot; class=&quot;headerlink&quot; title=&quot;ifPresent() - do something when Optional is set&quot;&gt;&lt;/a&gt;&lt;strong&gt;ifPresent()&lt;/strong&gt; - &lt;em&gt;do something when Optional is set&lt;/em&gt;&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tedious if statement:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (x != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    print(x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;can be replaced with higher-order function &lt;code&gt;ifPresent()&lt;/code&gt;:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;opt.ifPresent(x -&amp;gt; print(x));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;opt.ifPresent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;::print);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;The latter syntax (method reference) can be used when &lt;code&gt;lambda&lt;/code&gt; argument (String x) matches function formal parameters.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h5 id=&quot;filter-reject-filter-out-certain-Optional-values&quot;&gt;&lt;a href=&quot;#filter-reject-filter-out-certain-Optional-values&quot; class=&quot;headerlink&quot; title=&quot;filter() - reject (filter out) certain Optional values&quot;&gt;&lt;/a&gt;&lt;strong&gt;filter()&lt;/strong&gt; - &lt;em&gt;reject (filter out) certain Optional values&lt;/em&gt;&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sometimes you want to perform some action not only when a reference is set but also when it meets certain condition:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (x != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; x.contains(&lt;span class=&quot;string&quot;&gt;&quot;ab&quot;&lt;/span&gt;)) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    print(x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;This can be replaced with &lt;code&gt;Optional.filter()&lt;/code&gt; that turns present (set) Optional to empty Optional if underlying value does not meet given predicate. If input Optional was empty, it is returned as-is:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;opt.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   filter(x -&amp;gt; x.contains(&lt;span class=&quot;string&quot;&gt;&quot;ab&quot;&lt;/span&gt;)).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   ifPresent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;::print);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;```   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;This is equivalent to more imperative:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;```&lt;span class=&quot;function&quot;&gt;java&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(opt.isPresent()&lt;/span&gt; &amp;amp;&amp;amp; opt.&lt;span class=&quot;title&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;ab&quot;&lt;/span&gt;)&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    print(opt.get());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h5 id=&quot;map-transform-value-if-present&quot;&gt;&lt;a href=&quot;#map-transform-value-if-present&quot; class=&quot;headerlink&quot; title=&quot;map() - transform value if present&quot;&gt;&lt;/a&gt;&lt;strong&gt;map()&lt;/strong&gt; - &lt;em&gt;transform value if present&lt;/em&gt;&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Very often you need to apply some transformation on a value, but only if it’s not null (avoiding &lt;code&gt;NullPointerException&lt;/code&gt;):&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (x != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    String t = x.trim();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (t.length() &amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        print(t);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;This can be done in much more declarative way using &lt;code&gt;map()&lt;/code&gt;:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;opt.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    map(String::trim).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    filter(t -&amp;gt; t.length() &amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ifPresent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;::print);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;This becomes tricky. &lt;code&gt;Optional.map()&lt;/code&gt; applies given function on a value inside Optional - but only if Optional is present. Otherwise nothing happens and &lt;code&gt;empty()&lt;/code&gt; is returned. Remember that the transformation is type-safe - look at generics here:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Optional&amp;lt;String&amp;gt;  opt = &lt;span class=&quot;comment&quot;&gt;//...&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Optional&amp;lt;Integer&amp;gt; len = opt.map(String::length);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;Optional&amp;lt;String&amp;gt;&lt;/code&gt; is present. &lt;code&gt;Optional&amp;lt;Integer&amp;gt;&lt;/code&gt; len is present as well, wrapping length of a String. But if &lt;code&gt;opt&lt;/code&gt; was empty, &lt;code&gt;map()&lt;/code&gt; over it does nothing except changing generic type.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h5 id=&quot;orElse-orElseGet-turning-empty-Optional-lt-T-gt-to-default-T&quot;&gt;&lt;a href=&quot;#orElse-orElseGet-turning-empty-Optional-lt-T-gt-to-default-T&quot; class=&quot;headerlink&quot; title=&quot;orElse()/orElseGet() - turning empty Optional&amp;lt;T&amp;gt; to default T&quot;&gt;&lt;/a&gt;&lt;strong&gt;orElse()/orElseGet()&lt;/strong&gt; - &lt;em&gt;turning empty &lt;code&gt;Optional&amp;lt;T&amp;gt;&lt;/code&gt; to default &lt;code&gt;T&lt;/code&gt;&lt;/em&gt;&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At some point you may wish to unwrap &lt;code&gt;Optional&lt;/code&gt; and get a hold of real value inside. But you can’t do this if &lt;code&gt;Optional&lt;/code&gt; is empty. Here is a pre-Java 8 way of handling such scenario:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; len = (x != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)? x.length() : -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;With &lt;code&gt;Optional&lt;/code&gt; we can say:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; len = opt.map(String::length).orElse(-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;There is also a version that accepts &lt;code&gt;Supplier&amp;lt;T&amp;gt;&lt;/code&gt; if computing default value is slow, expensive or has side-effects:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; len = opt.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    map(String::length).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    orElseGet(() -&amp;gt; slowDefault());     &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//orElseGet(this::slowDefault)&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h5 id=&quot;orElseThrow-lazily-throw-exceptions-on-empty-Optional&quot;&gt;&lt;a href=&quot;#orElseThrow-lazily-throw-exceptions-on-empty-Optional&quot; class=&quot;headerlink&quot; title=&quot;orElseThrow() - lazily throw exceptions on empty Optional&quot;&gt;&lt;/a&gt;&lt;strong&gt;orElseThrow()&lt;/strong&gt; - &lt;em&gt;lazily throw exceptions on empty &lt;code&gt;Optional&lt;/code&gt;&lt;/em&gt;&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Often we would like to throw an exception if value is not available:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;firstChar&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String s)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (s != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !s.isEmpty())&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; s.charAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;This whole method can be replaced with the following idiom:&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;opt.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    filter(s -&amp;gt; !s.isEmpty()).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    map(s -&amp;gt; s.charAt(0)).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    orElseThrow(IllegalArgumentException::new);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;```    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;We don’t want to create an instance of exception in advance because creating an exception has _significant cost_.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* ##### **flatMap()** - _mapping over a function that returns `Optional`_&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Imagine you have a function that does not accept null but may produce one:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;```java&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public String findSimilar(@NotNull String s) //...&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Using it is a bit cumbersome:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;String similarOrNull = x != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;? findSimilar(x) : &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;With Optional it is a bit more straighforward:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Optional&amp;lt;String&amp;gt; similar = opt.map(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;::findSimilar);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;If the function we map() over returns null, the result of map() is an empty Optional. Otherwise it’s the result of said function wrapped with (present) Optional. So far so good but why do we return nullable value if we have Optional?&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Optional&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;tryFindSimilar&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String s)&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;//...&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Our intentions are clear but using map() fails to produce correct type. Instead we must use flatMap():&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Optional&amp;lt;Optional&amp;lt;String&amp;gt;&amp;gt; bad = opt.map(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;::tryFindSimilar);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Optional&amp;lt;String&amp;gt; similar =       opt.flatMap(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;::tryFindSimilar);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Do you see double &lt;code&gt;Optional&amp;lt;Optional&amp;lt;...&amp;gt;&amp;gt;&lt;/code&gt;? Definitely not what we want. If you are mapping over a function that returns Optional, use flatMap instead. Here is a simplified implementation of this function:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &amp;lt;U&amp;gt; &lt;span class=&quot;function&quot;&gt;Optional&amp;lt;U&amp;gt; &lt;span class=&quot;title&quot;&gt;flatMap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Function&amp;lt;T, Optional&amp;lt;U&amp;gt;&amp;gt; mapper)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isPresent())&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; empty();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mapper.apply(value);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Bigger example&lt;/p&gt;
&lt;p&gt;Imagine we have a Person with an Address that has a validFrom date. All of these can be null. We would like to know whether validFrom is set and in the past:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;validAddress&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(NullPerson person)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (person != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (person.getAddress() != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Instant validFrom = person.getAddress().getValidFrom();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; validFrom != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; validFrom.isBefore(now());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Quite ugly and defensive. Alternatively but still ugly:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; person != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       person.getAddress() != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       person.getAddress().getValidFrom() != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp;       person.getAddress().getValidFrom().isBefore(now());&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Now imagine all of these (person, getAddress(), getValidFrom()) are Optionals of appropriate types, clearly indicating they may not be set:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Optional&amp;lt;Address&amp;gt; address;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Optional&amp;lt;Address&amp;gt; &lt;span class=&quot;title&quot;&gt;getAddress&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; address;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//...&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Address&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Optional&amp;lt;Instant&amp;gt; validFrom;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Optional&amp;lt;Instant&amp;gt; &lt;span class=&quot;title&quot;&gt;getValidFrom&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; validFrom;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//...&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Suddenly the computation is much more streamlined:&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;return person.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        flatMap(Person::getAddress).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        flatMap(Address::getValidFrom).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        filter(x -&amp;gt; x.before(now())).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        isPresent();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;```        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Is it more readable? Hard to tell. But at least it’s impossible to produce NullPointerException when Optional is used consistently.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* ##### **Converting Optional&amp;lt;T&amp;gt; to List&amp;lt;T&amp;gt;**&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Thinking about Optional as a collection1 having either 0 or 1 elements, this may make understanding of map() and flatMap() easier. Unfortunately Optional doesn’t have toList() method, but it’s easy to implement one:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;```java&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public static &amp;lt;T&amp;gt; List&amp;lt;T&amp;gt; toList(Optional&amp;lt;T&amp;gt; option) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    return option.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            map(Collections::singletonList).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            orElse(Collections.emptyList());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Or less idiomatically:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &amp;lt;T&amp;gt; &lt;span class=&quot;function&quot;&gt;List&amp;lt;T&amp;gt; &lt;span class=&quot;title&quot;&gt;toList&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Optional&amp;lt;T&amp;gt; option)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (option.isPresent())&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Collections.singletonList(option.get());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Collections.emptyList();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;But why limit ourselves to List&lt;t&gt;? What about Set&lt;t&gt; and other collections? Java 8 already abstracts creating arbitrary collection via Collectors API, introduced for Streams. The API is hideous but comprehensible:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &amp;lt;R, A, T&amp;gt; &lt;span class=&quot;function&quot;&gt;R &lt;span class=&quot;title&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Optional&amp;lt;T&amp;gt; option, Collector&amp;lt;? &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; T, A, R&amp;gt; collector)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; A container = collector.supplier().get();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    option.ifPresent(v -&amp;gt; collector.accumulator().accept(container, v));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; collector.finisher().apply(container);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/t&gt;&lt;/t&gt;&lt;/p&gt;
&lt;p&gt;We can now say:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; java.util.stream.Collectors.*;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;List&amp;lt;String&amp;gt; list = collect(opt, toList());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Set&amp;lt;String&amp;gt;  set  = collect(opt, toSet());&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ref:&lt;/strong&gt; &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.nurkiewicz.com/2013/08/optional-in-java-8-cheat-sheet.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Optional in Java 8 cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;java-util-Optional&quot;&gt;&lt;a href=&quot;#java-util-Optional&quot; class=&quot;headerlink&quot; title=&quot;java.util.Optional&quot;&gt;&lt;/a&gt;&lt;strong&gt;java.util.Optional&lt;T&gt;&lt;/strong&gt;&lt;/h4&gt;Imagine &lt;code&gt;Optional&lt;/code&gt; as a container that may or may not contain some value. Just like all references in Java can point to some object or be null, &lt;code&gt;Option&lt;/code&gt; may enclose some (non-null!) reference or be empty.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Optional&lt;/code&gt; instead of plain null is statically checked at compile time and much more informative as it clearly indicates that a given variable may be present or not. Of course it requires some discipline - you should never assign null to any variable any more.&lt;br&gt;
    
    </summary>
    
      <category term="Java" scheme="http://volcanohong.github.com/categories/Java/"/>
    
    
      <category term="coding" scheme="http://volcanohong.github.com/tags/coding/"/>
    
      <category term="java" scheme="http://volcanohong.github.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Angular2 notes I</title>
    <link href="http://volcanohong.github.com/2016/10/01/angular2-notes-1/"/>
    <id>http://volcanohong.github.com/2016/10/01/angular2-notes-1/</id>
    <published>2016-10-01T17:39:45.000Z</published>
    <updated>2016-11-08T03:27:35.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;Angular-2&quot;&gt;&lt;a href=&quot;#Angular-2&quot; class=&quot;headerlink&quot; title=&quot;Angular 2&quot;&gt;&lt;/a&gt;&lt;strong&gt;Angular 2&lt;/strong&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The heart of angular 2 is &lt;code&gt;containers&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;import from &lt;code&gt;angular/core&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Component, &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Input,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Output,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    EventEmitter &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;@angular/core&#39;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Syntax&quot;&gt;&lt;a href=&quot;#Syntax&quot; class=&quot;headerlink&quot; title=&quot;Syntax&quot;&gt;&lt;/a&gt;&lt;strong&gt;Syntax&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Annotations&lt;br&gt;The @ is an annotation and it comes from TypeScript&lt;/li&gt;
&lt;li&gt;Component&lt;br&gt;Components teach your browser new tags&lt;/li&gt;
&lt;li&gt;Template&lt;br&gt;Views can be defined by the template option&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Multi-line Strings&lt;br&gt;Using ` backticks allows for easy inline templates&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;@Component(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    selector: &#39;main-container&#39;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    template: `&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            main content will go here&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;main&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    `&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Class Syntax&lt;br&gt;TypeScript allows you to define classes using the class syntax&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Events&lt;br&gt;One-way data binding means we fire events instead of modifying data directly&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;NoteCard&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    @Input() note = &amp;#123;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    @Output() checked = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; EventEmitter();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    showCheck: boolean = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    toggle() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.showCheck = ! &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.showCheck;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    onChecked() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.checked.next(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.note);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Brackets for Parameters&lt;br&gt;Use [] brackets on an attribute to pass parameters to the directive&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Star Syntax&lt;br&gt;Use the * on an attribute to use a directive on this element&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Parenthesis for View Actions&lt;br&gt;Use () parenthesis to specify action bindings&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;@Component(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    selector: &#39;note-card&#39;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    template: `&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            [&lt;span class=&quot;attr&quot;&gt;ngStyle&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;&#39;background-color&#39;: note.color&amp;#125;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;note-card row shadow-1&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            (&lt;span class=&quot;attr&quot;&gt;mouseenter&lt;/span&gt;) = &lt;span class=&quot;string&quot;&gt;&quot;toggle()&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            (&lt;span class=&quot;attr&quot;&gt;mouseleave&lt;/span&gt;) = &lt;span class=&quot;string&quot;&gt;&quot;toggle()&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;icon&quot;&lt;/span&gt; *&lt;span class=&quot;attr&quot;&gt;ngIf&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;showCheck&quot;&lt;/span&gt; (&lt;span class=&quot;attr&quot;&gt;click&lt;/span&gt;)=&lt;span class=&quot;string&quot;&gt;&quot;onChecked()&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;material-icons&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;check&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;col-xs-12 title&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#123;&amp;#123; note.title &amp;#125;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;col-xs-12 value&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#123;&amp;#123; note.value &amp;#125;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    `,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    style:[``]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Strong Typing&lt;br&gt;TypeScript lets us define collections that contain our custom type Product&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Component Definition Class&lt;br&gt;We define new Components with a class&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Some-Syntax-Instances&quot;&gt;&lt;a href=&quot;#Some-Syntax-Instances&quot; class=&quot;headerlink&quot; title=&quot;Some Syntax Instances&quot;&gt;&lt;/a&gt;&lt;strong&gt;Some Syntax Instances&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;li&gt;&lt;h5 id=&quot;Using-to-call-directives&quot;&gt;&lt;a href=&quot;#Using-to-call-directives&quot; class=&quot;headerlink&quot; title=&quot;Using * to call directives&quot;&gt;&lt;/a&gt;&lt;strong&gt;Using &lt;code&gt;*&lt;/code&gt; to call directives&lt;/strong&gt;&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ngIf&lt;/code&gt;&lt;br&gt;If the expression is evaluated to be a true, the &lt;code&gt;NgIf&lt;/code&gt; shows the elements, otherwise it removes the element from DOM.&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; *&lt;span class=&quot;attr&quot;&gt;ngIf&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;showMe&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;export &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Angular2NgIf&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    showMe:&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ngFor&lt;/code&gt;&lt;br&gt;NgFor directive repeats the part of a template for each item in an array.&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;note-card&lt;/span&gt; *&lt;span class=&quot;attr&quot;&gt;ngFor&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;let note of notes; let i = index&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;export &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Notes&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    notes = [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;title: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, value: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;title: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, value: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//...&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h5 id=&quot;Using-to-pass-parameter-to-directives&quot;&gt;&lt;a href=&quot;#Using-to-pass-parameter-to-directives&quot; class=&quot;headerlink&quot; title=&quot;Using [] to pass parameter to directives&quot;&gt;&lt;/a&gt;&lt;strong&gt;Using &lt;code&gt;[]&lt;/code&gt; to pass parameter to directives&lt;/strong&gt;&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ngStyle&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; [&lt;span class=&quot;attr&quot;&gt;ngStyle&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;&#39;background-color&#39;: note.color&amp;#125;&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ngModel&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [(&lt;span class=&quot;attr&quot;&gt;ngModel&lt;/span&gt;)]=&lt;span class=&quot;string&quot;&gt;&quot;newNote.title&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;newNoteTitle&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;...&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;equals to:&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;attr&quot;&gt;ngModel&lt;/span&gt;]=&lt;span class=&quot;string&quot;&gt;&quot;newNote.title&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    (&lt;span class=&quot;attr&quot;&gt;ngModelChange&lt;/span&gt;) = &lt;span class=&quot;string&quot;&gt;&quot;newNote.titel = $event&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;newNoteTitle&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;...&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* ##### **Using `()` to specify action bindings**&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;```html&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;note-card&lt;/span&gt; (&lt;span class=&quot;attr&quot;&gt;checked&lt;/span&gt;)=&lt;span class=&quot;string&quot;&gt;&quot;onNoteChecked($event, i)&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Input-Output&quot;&gt;&lt;a href=&quot;#Input-Output&quot; class=&quot;headerlink&quot; title=&quot;Input/Output&quot;&gt;&lt;/a&gt;&lt;strong&gt;Input/Output&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Component, &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Input,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Output,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    EventEmitter &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;@angular/core&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// in template:    &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;icon&quot;&lt;/span&gt; (click)=&lt;span class=&quot;string&quot;&gt;&quot;onChecked()&quot;&lt;/span&gt;&amp;gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;NoteCard&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    @Input() note = &amp;#123;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    @Output() checked = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; EventEmitter();  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    onChecked() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.checked.next(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.note);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Routing-in-Angular-2&quot;&gt;&lt;a href=&quot;#Routing-in-Angular-2&quot; class=&quot;headerlink&quot; title=&quot;Routing in Angular 2&quot;&gt;&lt;/a&gt;&lt;strong&gt;Routing in Angular 2&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Three main components configure routing&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Routes&lt;/strong&gt; describes the application’s routes&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RouterOutlet&lt;/strong&gt; is a “placeholder” component that gets expanded to each route’s content&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RouterLink&lt;/strong&gt; is used to link to routes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Routes&lt;/em&gt;&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; Routes &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;@angular/router&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; Main, Notes, About&amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;../containers&#39;&lt;/span&gt;; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; routes: Routes = [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &amp;#123; path: &#39;&#39;, redirectTo: &#39;home&#39;, pathMatch: &#39;full&#39; &amp;#125;,&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123; path: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, component: Main,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        children: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#123; path: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, component: Notes&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#123; path: &lt;span class=&quot;string&quot;&gt;&#39;about&#39;&lt;/span&gt;,  component: About &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;RouterOutlet&lt;/em&gt;&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;@Component(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    selector: &lt;span class=&quot;string&quot;&gt;&#39;main-container&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    template: &lt;span class=&quot;string&quot;&gt;`&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;router-outlet&amp;gt;&amp;lt;/router-outlet&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    `&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt; RouterLink&lt;/em&gt;&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; RouterLink &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;@angular/router&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;@Component(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    selector: &lt;span class=&quot;string&quot;&gt;&#39;app-bar&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    template: &lt;span class=&quot;string&quot;&gt;`&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;header class=&quot;app-bar row middle-xs&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;span [routerLink]=&quot;[&#39;&#39;]&quot; class=&quot;logo col-xs-10&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            Home&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;/span&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;nav class=&quot;col-xs-2&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;lt;div class=&quot;row middle-xs between-xs&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;lt;span [routerLink]=&quot;[&#39;&#39;, &#39;about&#39;]&quot;  class=&quot;link&quot;&amp;gt;About&amp;lt;/span&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;/nav&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;/header&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    `,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//...&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Ref:&lt;/strong&gt; &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://angular.io/docs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;angular docs.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;www.ng-book.com/2/&quot;&gt;ng-book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.ng-book.com/basic-routing-in-angular-2/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Basic Routing in Angular 2&lt;/a&gt;    &lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;Angular-2&quot;&gt;&lt;a href=&quot;#Angular-2&quot; class=&quot;headerlink&quot; title=&quot;Angular 2&quot;&gt;&lt;/a&gt;&lt;strong&gt;Angular 2&lt;/strong&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The heart of angular 2 is &lt;code&gt;containers&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;import from &lt;code&gt;angular/core&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Component, &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Input,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Output,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    EventEmitter &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;@angular/core&#39;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Javascript" scheme="http://volcanohong.github.com/categories/Javascript/"/>
    
    
      <category term="angular2" scheme="http://volcanohong.github.com/tags/angular2/"/>
    
      <category term="javascript" scheme="http://volcanohong.github.com/tags/javascript/"/>
    
      <category term="html" scheme="http://volcanohong.github.com/tags/html/"/>
    
      <category term="coding" scheme="http://volcanohong.github.com/tags/coding/"/>
    
  </entry>
  
  <entry>
    <title>SQL notes I</title>
    <link href="http://volcanohong.github.com/2016/09/12/sql-notes-1/"/>
    <id>http://volcanohong.github.com/2016/09/12/sql-notes-1/</id>
    <published>2016-09-13T04:00:00.000Z</published>
    <updated>2016-10-01T17:37:50.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Design-a-table-with-a-primary-key-of-varchar-or-int&quot;&gt;&lt;a href=&quot;#Design-a-table-with-a-primary-key-of-varchar-or-int&quot; class=&quot;headerlink&quot; title=&quot;Design a table with a primary key of varchar or int?&quot;&gt;&lt;/a&gt;&lt;strong&gt;Design a table with a primary key of varchar or int?&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;In gereral, &lt;code&gt;VARCHAR&lt;/code&gt; or &lt;code&gt;INT&lt;/code&gt; has no big differency in query. What matter is the access pattern.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Narrowness:&lt;/strong&gt;&lt;br&gt;On absolute terms, a wider key will always be worse than a narrow key. The type carries no importance, is the width of the key that matters. When compared with INT though, few types can beat INT in narrowness, so INT usually wins that argument just by the fact that it is only 4 bytes wide.&lt;/p&gt;
&lt;p&gt;More on this aspect:&lt;br&gt;In most cases, The Primary Key (PK) is defined as INT NOT NULL IDENTITY(1,1) field in each table.&lt;br&gt;On one side, with an IDENTITY field, the database handles all the details of making sure it’s really unique, and the INT datatype is just 4 bytes, and fixed, so it’s easier and more suited to be used for the primary (and clustering) key in the table.&lt;br&gt;On the other side, using a VARCHAR(10) or (20) just uses up too much space - 10 or 20 bytes instead of 4.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Another fact is when choosing the PK usually one also selects the clustered key. Those two are often confused. By default, SQL server chooses PK as one of clustering indexes.&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;Clustering Index:&lt;/strong&gt;&lt;br&gt;The idea of clustered indexes is to store a complete table in a B-tree structure. If a table has a clustered index, it basically means the index is the table. A clustered index has a strict row order like any other B-tree index: it sorts the rows according to the index definition.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pros&lt;/em&gt;&lt;br&gt;The upside of clustered indexes is that they can deliver subsequent rows quickly when accessed directly (not via a non-clustered index). In other words, they are fast if you use the clustering key to fetch several rows. Remember that the primary key is the clustering key per default. In that case, it means fetching several rows via primary key—with a single query.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Cons&lt;/em&gt;&lt;br&gt;How bad is the cluster index in query?&lt;/p&gt;
&lt;p&gt;Rows Fetched | Time (Heap) | Time (Clustered)&lt;/p&gt;
&lt;p&gt;10.000 | 31 | 78&lt;/p&gt;
&lt;p&gt;20.000 | 47 |130&lt;/p&gt;
&lt;p&gt;50.000 | 109 |297&lt;/p&gt;
&lt;p&gt;100.000 | 203 | 624&lt;/p&gt;
&lt;p&gt;200.000 | 390 | 1232&lt;/p&gt;
&lt;p&gt;Ref: &lt;a href=&quot;https://use-the-index-luke.com/blog/2014-01/unreasonable-defaults-primary-key-clustering-key&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Unreasonable Defaults: Primary Key as Clustering Key&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The clustering key value will be repeated on every single index entry on every single non-clustered index on the table, so potentially, it is wasting a lot of space (not just on disk - that’s cheap - but also in SQL Server’s main memory). Also, since it’s variable (might be 4, might be 20 chars) it’s harder to SQL server to properly maintain a good index structure.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;, it is always the right choice to start with INT NOT NULL IDENTITY(1,1)as the PK. However if considering VARCHAR type PK, it is better to avoid to use it as one of the clustering indexes.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Description-of-primary-keys-and-clustered-keys&quot;&gt;&lt;a href=&quot;#Description-of-primary-keys-and-clustered-keys&quot; class=&quot;headerlink&quot; title=&quot;Description of primary keys and clustered keys&quot;&gt;&lt;/a&gt;&lt;strong&gt;Description of primary keys and clustered keys&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Primary keys&lt;/strong&gt; are logical business elements. The primary key is used by your application to identify an entity, and the discussion about primary keys is largely wether to use natural keys or surrogate key. The links go into much more detail, but the basic idea is that natural keys are derived from an existing entity property like ssn or phone number, while surrogate keys have no meaning whatsoever with regard to the business entity, like id or rowid and they are usually of type IDENTITY or some sort of uuid. My personal opinion is that surrogate keys are superior to natural keys, and the choice should be always identity values for local only applicaitons, guids for any sort of distributed data. A primary key never changes during the lifetime of the entity.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Clustered keys&lt;/strong&gt; are the key that defines the physical storage of rows in the table. Most times they overlap with the primary key (the logical entity identifier), but that is not actually enforced nor required. When the two are different it means there is a non-clustered unique index on the table that implements the primary key. Clustered key values can actualy change during the lifetime of the row, resulting in the row being physically moved in the table to a new location. If you have to separate the primary key from the clustered key (and sometimes you do), choosing a good clustered key is significantly harder than choosing a primary key.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;SQL-scripts-to-set-non-cluster-index&quot;&gt;&lt;a href=&quot;#SQL-scripts-to-set-non-cluster-index&quot; class=&quot;headerlink&quot; title=&quot;SQL scripts to set non-cluster index&quot;&gt;&lt;/a&gt;&lt;strong&gt;SQL scripts to set non-cluster index&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- Enforces the Primary Key constraint with a Unique Non-Clustered Index&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; Foo1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Col1 &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; NONCLUSTERED,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Col2 &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Col3 &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;A table without clustered index uses Heap structure to query data.&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- Create the Primary Key constraint on an ever-increasing&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- key column&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; Foo2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Col1 &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; NONCLUSTERED,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Col2 UNIQUEIDENTIFIER &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Col3 &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- Create the Clustered Index on a random key column&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;UNIQUE&lt;/span&gt; CLUSTERED &lt;span class=&quot;keyword&quot;&gt;INDEX&lt;/span&gt; ci_Col2 &lt;span class=&quot;keyword&quot;&gt;ON&lt;/span&gt; Foo2(Col2)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;A table has both clustered and non-clustered indexes.&lt;/p&gt;
&lt;p&gt;Following are the advantages of focusing on index-only scans instead of clustered indexes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You are not limited to one index. Any index can be as fast as a clustered index.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Adding INCLUDE columns to a non-clustered index doesn’t affect anything else than this particular index. There is no penalty that hurts all other indexes!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You don’t need to add all table columns to a non-clustered index to enable an index-only scan. Just add the columns that are relevant for the query you’d like to tune. That keeps the index small and can thus become even faster than a clustered index.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;And the best part is: there is no mutual exclusion of index-only scans and clustered indexes. Index-only scans work irrespective of the table storage. You can extend non-clustered indexes for index-only scans even if there is a clustered index. That’s also an easy way to avoid paying the “clustered index penalty” on non-clustered indexes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- Enforces the Primary Key constraint with a Unique Non-Clustered Index&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; Foo1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Col1 &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; NONCLUSTERED,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Col2 &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Col3 &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- Create the Primary Key constraint on an ever-increasing&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- key column&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; Foo2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Col1 &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; NONCLUSTERED,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Col2 UNIQUEIDENTIFIER &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Col3 &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- Create the Clustered Index on a random key column&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;UNIQUE&lt;/span&gt; CLUSTERED &lt;span class=&quot;keyword&quot;&gt;INDEX&lt;/span&gt; ci_Col2 &lt;span class=&quot;keyword&quot;&gt;ON&lt;/span&gt; Foo2(Col2)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;What-is-a-GUID&quot;&gt;&lt;a href=&quot;#What-is-a-GUID&quot; class=&quot;headerlink&quot; title=&quot;What is a GUID?&quot;&gt;&lt;/a&gt;&lt;strong&gt;What is a GUID?&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GUID (or UUID) is an acronym for ‘Globally Unique Identifier’ (or ‘Universally Unique Identifier’). It is a 128-bit integer number used to identify resources. The term GUID is generally used by developers working with Microsoft technologies, while UUID is used everywhere else.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How unique is a GUID?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;128-bits is big enough and the generation algorithm is unique enough that if 1,000,000,000 GUIDs per second were generated for 1 year the probability of a duplicate would be only 50%. Or if every human on Earth generated 600,000,000 GUIDs there would only be a 50% probability of a duplicate.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How are GUIDs used?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GUIDs are used in enterprise software development in C#, Java, and C++ as database keys, component identifiers, or just about anywhere else a truly unique identifier is required. GUIDs are also used to identify all interfaces and objects in COM programming.&lt;/p&gt;
&lt;p&gt;SQL Server has the creation of GUID’s built in. There is no need to write a separate stored procedure for this.&lt;br&gt;You can use&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- `NEWID()`
- `NEWSEQUENTIALID()`
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The key difference between both procedures would be that the sequential GUID should be used if it is for a primary clustered key.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Design-a-table-with-a-primary-key-of-varchar-or-int&quot;&gt;&lt;a href=&quot;#Design-a-table-with-a-primary-key-of-varchar-or-int&quot; class=&quot;headerlink&quot; title=&quot;Design a table with a primary key of varchar or int?&quot;&gt;&lt;/a&gt;&lt;strong&gt;Design a table with a primary key of varchar or int?&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;In gereral, &lt;code&gt;VARCHAR&lt;/code&gt; or &lt;code&gt;INT&lt;/code&gt; has no big differency in query. What matter is the access pattern.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Narrowness:&lt;/strong&gt;&lt;br&gt;On absolute terms, a wider key will always be worse than a narrow key. The type carries no importance, is the width of the key that matters. When compared with INT though, few types can beat INT in narrowness, so INT usually wins that argument just by the fact that it is only 4 bytes wide.&lt;/p&gt;
&lt;p&gt;More on this aspect:&lt;br&gt;In most cases, The Primary Key (PK) is defined as INT NOT NULL IDENTITY(1,1) field in each table.&lt;br&gt;On one side, with an IDENTITY field, the database handles all the details of making sure it’s really unique, and the INT datatype is just 4 bytes, and fixed, so it’s easier and more suited to be used for the primary (and clustering) key in the table.&lt;br&gt;On the other side, using a VARCHAR(10) or (20) just uses up too much space - 10 or 20 bytes instead of 4.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Another fact is when choosing the PK usually one also selects the clustered key. Those two are often confused. By default, SQL server chooses PK as one of clustering indexes.&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Database" scheme="http://volcanohong.github.com/categories/Database/"/>
    
    
      <category term="database" scheme="http://volcanohong.github.com/tags/database/"/>
    
      <category term="sql server" scheme="http://volcanohong.github.com/tags/sql-server/"/>
    
      <category term="sql" scheme="http://volcanohong.github.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>Machine learning notes</title>
    <link href="http://volcanohong.github.com/2016/09/01/machine-learning-notes/"/>
    <id>http://volcanohong.github.com/2016/09/01/machine-learning-notes/</id>
    <published>2016-09-02T04:00:00.000Z</published>
    <updated>2016-09-07T21:07:48.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;What-is-machine-learning&quot;&gt;&lt;a href=&quot;#What-is-machine-learning&quot; class=&quot;headerlink&quot; title=&quot;What is machine learning?&quot;&gt;&lt;/a&gt;&lt;strong&gt;What is machine learning?&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Core Task&lt;ul&gt;
&lt;li&gt;Finds patterns in data&lt;/li&gt;
&lt;li&gt;Use those patterns to predict future&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/content/images/2016/ml_offering.png&quot; alt=&quot;Example Machine Learning Offerings&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What is learning?&lt;ul&gt;
&lt;li&gt;Identifying patterns&lt;/li&gt;
&lt;li&gt;Recognizing those patterns when you see them again&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Machine can find a pattern in existing data, then create and use a model that recognize those patterns in new data&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt; 
&lt;p&gt;&lt;img src=&quot;/content/images/2016/ml_nutshell.png&quot; alt=&quot;Inside Machine Learning&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A Data Scientist needs to master&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;statistics&lt;/li&gt;
&lt;li&gt;machine learning software&lt;/li&gt;
&lt;li&gt;some problem domain (application fields)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Languages&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;R&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Steps-of-Sovling-a-Problem&quot;&gt;&lt;a href=&quot;#Steps-of-Sovling-a-Problem&quot; class=&quot;headerlink&quot; title=&quot;Steps of Sovling a Problem&quot;&gt;&lt;/a&gt;&lt;strong&gt;Steps of Sovling a Problem&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Ask a question first? such as…&lt;ul&gt;
&lt;li&gt;How to keep a player to play longer?&lt;/li&gt;
&lt;li&gt;How to get a player to play instantly?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/content/images/2016/ml_1st_step.png&quot; alt=&quot;1st Step of Machine Learning&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Whether or not having lots of right data?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pattern, Model and Application?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/content/images/2016/ml_process.png&quot; alt=&quot;Machine Learning Process&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Need knowledge:&lt;ul&gt;
&lt;li&gt;Training data: the prepared data used to create a model&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Supervised learning&lt;/em&gt;: the value you want to predict is in the training data, data is labelled, the target value is part of training data.&lt;br&gt;(and &lt;em&gt;unsupervised learning&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Classifying machine learning problems and algorithms&lt;ul&gt;
&lt;li&gt;Supervised: Regression, Classification,&lt;/li&gt;
&lt;li&gt;Unsupervised: Clustering Algorithms: Decision tree, Neural network, Bayesian, K-means&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/content/images/2016/ml_entire_process.png&quot; alt=&quot;Repeating Machine Learning Process&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Training a model&lt;/li&gt;
&lt;li&gt;Testing a model&lt;/li&gt;
&lt;li&gt;Using a model&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;What-is-machine-learning&quot;&gt;&lt;a href=&quot;#What-is-machine-learning&quot; class=&quot;headerlink&quot; title=&quot;What is machine learning?&quot;&gt;&lt;/a&gt;&lt;strong&gt;What is machine learning?&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Core Task&lt;ul&gt;
&lt;li&gt;Finds patterns in data&lt;/li&gt;
&lt;li&gt;Use those patterns to predict future&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/content/images/2016/ml_offering.png&quot; alt=&quot;Example Machine Learning Offerings&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What is learning?&lt;ul&gt;
&lt;li&gt;Identifying patterns&lt;/li&gt;
&lt;li&gt;Recognizing those patterns when you see them again&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Machine can find a pattern in existing data, then create and use a model that recognize those patterns in new data&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Big data" scheme="http://volcanohong.github.com/categories/Big-data/"/>
    
    
      <category term="big data" scheme="http://volcanohong.github.com/tags/big-data/"/>
    
      <category term="AI" scheme="http://volcanohong.github.com/tags/AI/"/>
    
      <category term="machine learning" scheme="http://volcanohong.github.com/tags/machine-learning/"/>
    
  </entry>
  
  <entry>
    <title>Hippo notes 2</title>
    <link href="http://volcanohong.github.com/2016/08/24/hippo-notes-2/"/>
    <id>http://volcanohong.github.com/2016/08/24/hippo-notes-2/</id>
    <published>2016-08-25T04:00:00.000Z</published>
    <updated>2016-08-24T04:15:55.000Z</updated>
    
    <content type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Carousel-Parameters&quot;&gt;&lt;a href=&quot;#Carousel-Parameters&quot; class=&quot;headerlink&quot; title=&quot;Carousel Parameters&quot;&gt;&lt;/a&gt;&lt;strong&gt;Carousel Parameters&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Problem: In Hippo banner carousel setting, changing parameter &lt;code&gt;height&lt;/code&gt; has no effect. &lt;/p&gt;
&lt;p&gt;Solution: This is because missing configuration of CSS with parameter &lt;code&gt;height&lt;/code&gt; in &lt;code&gt;essentials-carousel.ftl&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The following code is a good example to show that using object from java bean to dynamically configure the CSS in script.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;#-- @ftlvariable name=&amp;quot;cparam&amp;quot; type=&amp;quot;org.onehippo.cms7.essentials.components.info.EssentialsCarouselComponentInfo&amp;quot; --&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;@hst.headContribution&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;category&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;htmlHead&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/css&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;#--&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;Carousel&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;--&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        .swiper-wrapper &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            max-height: $&amp;#123;cparam.carouselHeight&amp;#125;px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;@hst.headContribution&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Carousel-Parameters&quot;&gt;&lt;a href=&quot;#Carousel-Parameters&quot; class=&quot;headerlink&quot; title=&quot;Carousel Parameters&quot;&gt;&lt;/a&gt;&lt;s
    
    </summary>
    
      <category term="Hippo" scheme="http://volcanohong.github.com/categories/Hippo/"/>
    
    
      <category term="javascript" scheme="http://volcanohong.github.com/tags/javascript/"/>
    
      <category term="coding" scheme="http://volcanohong.github.com/tags/coding/"/>
    
      <category term="hippo" scheme="http://volcanohong.github.com/tags/hippo/"/>
    
      <category term="freemarker" scheme="http://volcanohong.github.com/tags/freemarker/"/>
    
      <category term="cms" scheme="http://volcanohong.github.com/tags/cms/"/>
    
  </entry>
  
  <entry>
    <title>Spring MVC notes I</title>
    <link href="http://volcanohong.github.com/2016/08/12/spring-mvc-notes/"/>
    <id>http://volcanohong.github.com/2016/08/12/spring-mvc-notes/</id>
    <published>2016-08-13T00:53:18.000Z</published>
    <updated>2016-08-14T00:54:00.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;MVC&quot;&gt;&lt;a href=&quot;#MVC&quot; class=&quot;headerlink&quot; title=&quot;MVC&quot;&gt;&lt;/a&gt;&lt;strong&gt;MVC&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;A web framework built around the principles of &lt;code&gt;Spring&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;POJO&lt;/code&gt; based and interface driven&lt;/li&gt;
&lt;li&gt;Based on a Dispatcher Servlet / Front Controller pattern&lt;/li&gt;
&lt;li&gt;Support for:&lt;ul&gt;
&lt;li&gt;Themes&lt;/li&gt;
&lt;li&gt;Locales | i18n&lt;/li&gt;
&lt;li&gt;Restful services&lt;/li&gt;
&lt;li&gt;Annotation based configuration&lt;/li&gt;
&lt;li&gt;Seamless integration with other Spring Service/beans&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Request / Response Lifecycle&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/content/images/2016/mvc_frame.png&quot; alt=&quot;MVC Framework&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DispatherServlet&lt;/strong&gt;: The entry / configuration point for the application&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Controller&lt;/strong&gt;: Command pattern object that handles the request and determines which view to route to&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RequestMapping&lt;/strong&gt;: The url and request type that a methode is tied to&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ViewResolver&lt;/strong&gt;: Used to locate JSP pages etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Servlet-config&lt;/strong&gt;: Configuration file per &lt;code&gt;DispatcherServlet&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;POJO&lt;/strong&gt;: Plain Old Java Object&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bean&lt;/strong&gt;: A Spring configured POJO&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Maven&quot;&gt;&lt;a href=&quot;#Maven&quot; class=&quot;headerlink&quot; title=&quot;Maven&quot;&gt;&lt;/a&gt;&lt;strong&gt;Maven&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Dependencies:&lt;ul&gt;
&lt;li&gt;spring-webmvc&lt;/li&gt;
&lt;li&gt;servlet-api&lt;/li&gt;
&lt;li&gt;jstl&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;MVC&quot;&gt;&lt;a href=&quot;#MVC&quot; class=&quot;headerlink&quot; title=&quot;MVC&quot;&gt;&lt;/a&gt;&lt;strong&gt;MVC&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;A web framework built around the principles of &lt;code&gt;Spring&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;POJO&lt;/code&gt; based and interface driven&lt;/li&gt;
&lt;li&gt;Based on a Dispatcher Servlet / Front Controller pattern&lt;/li&gt;
&lt;li&gt;Support for:&lt;ul&gt;
&lt;li&gt;Themes&lt;/li&gt;
&lt;li&gt;Locales | i18n&lt;/li&gt;
&lt;li&gt;Restful services&lt;/li&gt;
&lt;li&gt;Annotation based configuration&lt;/li&gt;
&lt;li&gt;Seamless integration with other Spring Service/beans&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Spring" scheme="http://volcanohong.github.com/categories/Spring/"/>
    
    
      <category term="coding" scheme="http://volcanohong.github.com/tags/coding/"/>
    
      <category term="Spring" scheme="http://volcanohong.github.com/tags/Spring/"/>
    
      <category term="Java" scheme="http://volcanohong.github.com/tags/Java/"/>
    
      <category term="MVC" scheme="http://volcanohong.github.com/tags/MVC/"/>
    
  </entry>
  
  <entry>
    <title>Freemarker notes</title>
    <link href="http://volcanohong.github.com/2016/08/10/freemarker-notes/"/>
    <id>http://volcanohong.github.com/2016/08/10/freemarker-notes/</id>
    <published>2016-08-11T00:52:33.000Z</published>
    <updated>2016-08-14T00:53:57.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Built-in-Function&quot;&gt;&lt;a href=&quot;#Built-in-Function&quot; class=&quot;headerlink&quot; title=&quot;Built-in Function&quot;&gt;&lt;/a&gt;&lt;strong&gt;Built-in Function&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Built-ins are like methods that are added to the objects by &lt;code&gt;FreeMarker&lt;/code&gt;. To prevent name clashes with actual methods and other sub-variables, instead of dot (.), you separate them from the parent object with question mark (?).&lt;/p&gt;
&lt;p&gt;Some examples:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$&amp;#123;testString?upper_case&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$&amp;#123;testString?html&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$&amp;#123;testString?upper_case?html&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$&amp;#123;testSequence?size&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$&amp;#123;testSequence?join(&amp;quot;, &amp;quot;)&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Assuming that testString stores the string “Tom &amp;amp; Jerry”, and testSequnce stores the strings “foo”, “bar” and “baz”, the output will be:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;TOM &amp;amp; JERRY&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Tom &amp;amp;amp; Jerry&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;TOM &amp;amp;amp; JERRY&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;foo, bar, baz&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;html&lt;/code&gt;(deprecated): This built-in is deprecated by the auto-escaping mechanism introduced in 2.3.24. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Other examples:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;path?ensure_starts_with(&amp;apos;/&amp;apos;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;path?length &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;#--not path?length()--&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Ref links: &lt;a href=&quot;http://freemarker.org/docs/ref_builtins_string.html#ref_builtin_html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;builtin methods&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Built-in-Function&quot;&gt;&lt;a href=&quot;#Built-in-Function&quot; class=&quot;headerlink&quot; title=&quot;Built-in Function&quot;&gt;&lt;/a&gt;&lt;strong&gt;Built-in Function&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Built-ins are like methods that are added to the objects by &lt;code&gt;FreeMarker&lt;/code&gt;. To prevent name clashes with actual methods and other sub-variables, instead of dot (.), you separate them from the parent object with question mark (?).&lt;/p&gt;
&lt;p&gt;Some examples:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$&amp;#123;testString?upper_case&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$&amp;#123;testString?html&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$&amp;#123;testString?upper_case?html&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$&amp;#123;testSequence?size&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$&amp;#123;testSequence?join(&amp;quot;, &amp;quot;)&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Assuming that testString stores the string “Tom &amp;amp; Jerry”, and testSequnce stores the strings “foo”, “bar” and “baz”, the output will be:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;TOM &amp;amp; JERRY&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Tom &amp;amp;amp; Jerry&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;TOM &amp;amp;amp; JERRY&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;foo, bar, baz&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;html&lt;/code&gt;(deprecated): This built-in is deprecated by the auto-escaping mechanism introduced in 2.3.24. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Other examples:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;path?ensure_starts_with(&amp;apos;/&amp;apos;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;path?length &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;#--not path?length()--&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Ref links: &lt;a href=&quot;http://freemarker.org/docs/ref_builtins_string.html#ref_builtin_html&quot;&gt;builtin methods&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="HTML" scheme="http://volcanohong.github.com/categories/HTML/"/>
    
    
      <category term="html" scheme="http://volcanohong.github.com/tags/html/"/>
    
      <category term="hippo" scheme="http://volcanohong.github.com/tags/hippo/"/>
    
      <category term="freemarker" scheme="http://volcanohong.github.com/tags/freemarker/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop notes I</title>
    <link href="http://volcanohong.github.com/2016/08/08/hadoop-notes/"/>
    <id>http://volcanohong.github.com/2016/08/08/hadoop-notes/</id>
    <published>2016-08-09T00:51:37.000Z</published>
    <updated>2016-09-07T20:42:00.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Why big data?&lt;br&gt;In case of Google:&lt;ul&gt;
&lt;li&gt;~40 billion web pages x 30 kb each = Petabyte&lt;/li&gt;
&lt;li&gt;average disk speed reads about 120 mb/sec&lt;/li&gt;
&lt;li&gt;over 3 months to read the web&lt;/li&gt;
&lt;li&gt;about 1,000 drives to store and use&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;   
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Distributed computing challenge&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scale out with distributed computing&lt;/li&gt;
&lt;li&gt;Volume, velocity and variety&lt;/li&gt;
&lt;li&gt;Recover from failures&lt;/li&gt;
&lt;li&gt;Shared nothing architecture (name node &amp;amp; job tracker) &lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;a. Google file system (GFS) (2003), which the hadoop file system (HDFS) is based upon.&lt;br&gt;b. MapReduce (2004)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Hadoop&lt;ul&gt;
&lt;li&gt;Open source&lt;/li&gt;
&lt;li&gt;Relax the complexities of distributed systems&lt;/li&gt;
&lt;li&gt;Fault-tolerant distributed file system &lt;/li&gt;
&lt;li&gt;API &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;HDFS&lt;ul&gt;
&lt;li&gt;Tackle files rather than database&lt;/li&gt;
&lt;li&gt;Split file into chunks or blocks (64 to 128 mb each)&lt;/li&gt;
&lt;li&gt;Place each block of data on a different data node, and replicate each block to three nodes by default&lt;/li&gt;
&lt;li&gt;Read data in the same rack  &lt;/li&gt;
&lt;li&gt;Hive query &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;MapReduce&lt;ul&gt;
&lt;li&gt;Map&lt;/li&gt;
&lt;li&gt;Shuffle and sort&lt;/li&gt;
&lt;li&gt;Reduce   &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Why big data?&lt;br&gt;In case of Google:&lt;ul&gt;
&lt;li&gt;~40 billion web pages x 30 kb each = Petabyte&lt;/li&gt;
&lt;li&gt;average disk speed reads about 120 mb/sec&lt;/li&gt;
&lt;li&gt;over 3 months to read the web&lt;/li&gt;
&lt;li&gt;about 1,000 drives to store and use
    
    </summary>
    
      <category term="Big data" scheme="http://volcanohong.github.com/categories/Big-data/"/>
    
    
      <category term="big data" scheme="http://volcanohong.github.com/tags/big-data/"/>
    
      <category term="hadoop" scheme="http://volcanohong.github.com/tags/hadoop/"/>
    
      <category term="hive" scheme="http://volcanohong.github.com/tags/hive/"/>
    
  </entry>
  
  <entry>
    <title>Javascript/jQuery notes I</title>
    <link href="http://volcanohong.github.com/2016/08/06/javascripts-notes-1/"/>
    <id>http://volcanohong.github.com/2016/08/06/javascripts-notes-1/</id>
    <published>2016-08-07T00:50:00.000Z</published>
    <updated>2016-08-23T23:54:18.000Z</updated>
    
    <content type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;HTML-DIV-overflow-and-scroll&quot;&gt;&lt;a href=&quot;#HTML-DIV-overflow-and-scroll&quot; class=&quot;headerlink&quot; title=&quot;HTML DIV overflow and scroll&quot;&gt;&lt;/a&gt;&lt;strong&gt;HTML DIV overflow and scroll&lt;/strong&gt;&lt;/h4&gt;Sometimes, the &lt;code&gt;overflow-y:scroll&lt;/code&gt; is not working.&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#div_scroll&#39;&lt;/span&gt;).css(&lt;span class=&quot;string&quot;&gt;&#39;overflow-y&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;auto&#39;&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Simply because the &lt;code&gt;height&lt;/code&gt; property is missing.&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#div_scroll&#39;&lt;/span&gt;).css(&lt;span class=&quot;string&quot;&gt;&#39;height&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;200px&#39;&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Datepicker&quot;&gt;&lt;a href=&quot;#Datepicker&quot; class=&quot;headerlink&quot; title=&quot;Datepicker&quot;&gt;&lt;/a&gt;&lt;strong&gt;Datepicker&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Configure datepicker: make sure the right jQuery libs have been included.&lt;/p&gt;
&lt;p&gt;Show calendar image only with a hidden input field.&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hidden&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;dp&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;#dp&quot;&lt;/span&gt;).datepicker(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    buttonImage: &lt;span class=&quot;string&quot;&gt;&#39;../images/calendar.png&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    buttonImageOnly: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    changeMonth: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    changeYear: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    showOn: &lt;span class=&quot;string&quot;&gt;&#39;both&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Show both date input and image fields. The datepicker is binding to the input field. Then, when clicking the image, it also trigger the popup of same datepicker.&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;date&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;date_img&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;../images/calendar.png”&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;#date&quot;&lt;/span&gt;).datepicker(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    format: &lt;span class=&quot;string&quot;&gt;&quot;yyyy-mm-dd&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    autoclose: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;#date_img&quot;&lt;/span&gt;).on( &lt;span class=&quot;string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&#39;#date&#39;&lt;/span&gt;).datepicker(&lt;span class=&quot;string&quot;&gt;&#39;show&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Possible conflict with &lt;code&gt;bootstrap&lt;/code&gt;: when it comes with &lt;code&gt;&amp;lt;div class=&amp;quot;input-group date&amp;quot; data-provide=&amp;quot;datepicker&amp;quot;&amp;gt;&lt;/code&gt; in HTML, the datepicker does not popup.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Get-URL-Parameters&quot;&gt;&lt;a href=&quot;#Get-URL-Parameters&quot; class=&quot;headerlink&quot; title=&quot;Get URL Parameters&quot;&gt;&lt;/a&gt;&lt;strong&gt;Get URL Parameters&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;script type=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;$_GET&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;q,s&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        s = s ? s : &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.location.search; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; re = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;&amp;amp;&#39;&lt;/span&gt;+q+&lt;span class=&quot;string&quot;&gt;&#39;(?:=([^&amp;amp;]*))?(?=&amp;amp;|$)&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;i&#39;&lt;/span&gt;); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (s=s.replace(&lt;span class=&quot;regexp&quot;&gt;/^\?/&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;&amp;amp;&#39;&lt;/span&gt;).match(re)) ? (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; s[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;&#39;undefined&#39;&lt;/span&gt; ? &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt; : &lt;span class=&quot;built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(s[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])) : &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;This is a &lt;code&gt;JavaScript&lt;/code&gt; implementation of PHP’s &lt;code&gt;$_GET&lt;/code&gt; functionality. It uses a regular expression to keep the code to a minimum. Here is a simple example of how to use it:&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// this code would print &quot;hello world&quot; with http://someurl?var1=hello&amp;amp;var2=world&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; var1 = $_GET(&lt;span class=&quot;string&quot;&gt;&#39;var1&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; var2 = $_GET(&lt;span class=&quot;string&quot;&gt;&#39;var2&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.write(var1 + &lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt; + var2);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// get the src parameter and split it down to the search query string&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; src = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;example&#39;&lt;/span&gt;).src;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;params = src.split(&lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; var1 = $_GET(&lt;span class=&quot;string&quot;&gt;&#39;var1&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;+params[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Two-Digits-Hours-and-Minutes&quot;&gt;&lt;a href=&quot;#Two-Digits-Hours-and-Minutes&quot; class=&quot;headerlink&quot; title=&quot;Two Digits Hours and Minutes&quot;&gt;&lt;/a&gt;&lt;strong&gt;Two Digits Hours and Minutes&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;currentFormatTime&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; date = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;(),str=&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; currHours = date.getHours();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    currHours = (&lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt; + currHours).slice(&lt;span class=&quot;number&quot;&gt;-2&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    str += currHours + &lt;span class=&quot;string&quot;&gt;&#39;:&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; currMins = date.getMinutes();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    currMins = (&lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt; + currMins).slice(&lt;span class=&quot;number&quot;&gt;-2&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    str += currMins + &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; str;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//set current time&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;#currentTime&quot;&lt;/span&gt;).html(currentFormatTime);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;setInterval(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;$(&lt;span class=&quot;string&quot;&gt;&quot;#currentTime&quot;&lt;/span&gt;).html(currentFormatTime)&amp;#125;,&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Format-Date-to-MM-DD-YY&quot;&gt;&lt;a href=&quot;#Format-Date-to-MM-DD-YY&quot; class=&quot;headerlink&quot; title=&quot;Format Date to MM/DD/YY&quot;&gt;&lt;/a&gt;&lt;strong&gt;Format Date to MM/DD/YY&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Consider the case with a single digit in month and day&lt;/li&gt;
&lt;li&gt;Consider to slice the year to two digits.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getYear()&lt;/code&gt; returns [year]-1900. E.g., 2016 - 1900 = 116. &lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;formatDate&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;date&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; pDate = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;(date);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; month = pDate.getMonth() + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    month = month &amp;lt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; ? &lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt; + month : month;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; day = pDate.getDate();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    day = day &amp;lt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; ? &lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt; + day : day;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; year = pDate.getFullYear();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    year = year.toString().substr(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;  month + &lt;span class=&quot;string&quot;&gt;&#39;/&#39;&lt;/span&gt; + day + &lt;span class=&quot;string&quot;&gt;&#39;/&#39;&lt;/span&gt; + year;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Populate-HTML-Table-Dynamically&quot;&gt;&lt;a href=&quot;#Populate-HTML-Table-Dynamically&quot; class=&quot;headerlink&quot; title=&quot;Populate HTML Table Dynamically&quot;&gt;&lt;/a&gt;&lt;strong&gt;Populate HTML Table Dynamically&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;thead&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;ID&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;th&lt;/span&gt;&amp;gt;&lt;/span&gt;NAME&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;th&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;th&lt;/span&gt;&amp;gt;&lt;/span&gt;STATUS&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;th&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;thead&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;tbody&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;tableBody&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;tbody&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$(&amp;quot;#tableBody&amp;quot;).empty()&lt;/code&gt; clear the all children html elements inside &lt;code&gt;#tableBody&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$(&amp;quot;#tableBody&amp;quot;).remove()&lt;/code&gt; removes all including &lt;code&gt;#tableBody&lt;/code&gt; itself.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;#tableBody&quot;&lt;/span&gt;).empty();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$.each(data, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;key, value&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    htmlTable(value.id, value.name, value.status);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//populate html table&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;htmlTable&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;id, name, status&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &amp;lt;th&amp;gt;ID&amp;lt;/th&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &amp;lt;th&amp;gt;NAME&amp;lt;/th&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &amp;lt;th&amp;gt;STATUS&amp;lt;/th&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; tr = &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;tr&amp;gt;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    tr += &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;th scope=&quot;row&quot;&amp;gt;&#39;&lt;/span&gt; + id + &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;/th&amp;gt;&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    tr += &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;td&amp;gt;&#39;&lt;/span&gt; + name + &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;/td&amp;gt;&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    tr += &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;td&amp;gt;&#39;&lt;/span&gt; + status + &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;/td&amp;gt;&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    tr += &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;/tr&amp;gt;&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&quot;#tableBody&quot;&lt;/span&gt;).append(tr);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Treat-String-like-Variable-Name&quot;&gt;&lt;a href=&quot;#Treat-String-like-Variable-Name&quot; class=&quot;headerlink&quot; title=&quot;Treat String like Variable Name&quot;&gt;&lt;/a&gt;&lt;strong&gt;Treat String like Variable Name&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;User &lt;code&gt;eval&lt;/code&gt; (may have some problem…).&lt;br&gt;Here, the &lt;code&gt;#tableBody&lt;/code&gt; shows content based on the option being selected in a dropdown list &lt;code&gt;#select&lt;/code&gt;. Suppose variable &lt;code&gt;varName&lt;/code&gt; has corresponding html table content.&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#select&#39;&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&#39;change&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&#39;#tableBody&#39;&lt;/span&gt;).empty();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; varName = $( &lt;span class=&quot;string&quot;&gt;&quot;#select option:selected&quot;&lt;/span&gt; ).val();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;eval&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;$(&#39;#tableBody&#39;).append(&quot;&lt;/span&gt; + varName + &lt;span class=&quot;string&quot;&gt;&quot;)&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Another method, if &lt;code&gt;varName&lt;/code&gt; has been defined as global variable. Call it by &lt;code&gt;window[varName]&lt;/code&gt;.&lt;br&gt;&lt;code&gt;$(&amp;#39;#tableBody&amp;#39;).append(window[varName]);&lt;/code&gt; &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;HTML-DIV-overflow-and-scroll&quot;&gt;&lt;a href=&quot;#HTML-DIV-overflow-and-scroll&quot; class=&quot;headerlink&quot; title=&quot;HTML DIV 
    
    </summary>
    
      <category term="Javascript" scheme="http://volcanohong.github.com/categories/Javascript/"/>
    
    
      <category term="javascript" scheme="http://volcanohong.github.com/tags/javascript/"/>
    
      <category term="coding" scheme="http://volcanohong.github.com/tags/coding/"/>
    
      <category term="jQuery" scheme="http://volcanohong.github.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>Spring notes I</title>
    <link href="http://volcanohong.github.com/2016/08/03/spring-notes-1/"/>
    <id>http://volcanohong.github.com/2016/08/03/spring-notes-1/</id>
    <published>2016-08-04T04:50:04.000Z</published>
    <updated>2016-08-04T04:50:04.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Inversion of Control (IoC)&lt;/strong&gt;: The core of the Spring framework is based on the principle of IoC. IoC is a technique that externalizes the creation and management of component dependencies. &lt;/p&gt;
&lt;p&gt;A alternative descriptive name is &lt;strong&gt;Dependency Injection (DI)&lt;/strong&gt;. Such behavior takes place at runtime, in which an instance of class A is provided to class B by some external process if B depends on A to perform some processing.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Aspect Oriented Programing (AOP)&lt;/strong&gt;: AOP provids another way of thinking about program structure. The key unit of modularity in OOP is the class, whereas in AOP the unit of modularity is the aspect. Aspects enable the modularization of concerns such as transaction management, log management, and input field validation that cut across multiple types and objects. &lt;/p&gt;
&lt;p&gt;The best document: &lt;a href=&quot;http://docs.spring.io/spring/docs/current/spring-framework-reference/html/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Spring Framework Documents&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Spring-Basics&quot;&gt;&lt;a href=&quot;#Spring-Basics&quot; class=&quot;headerlink&quot; title=&quot;Spring Basics&quot;&gt;&lt;/a&gt;&lt;strong&gt;Spring Basics&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;li&gt;&lt;h5 id=&quot;applicationContext-xml&quot;&gt;&lt;a href=&quot;#applicationContext-xml&quot; class=&quot;headerlink&quot; title=&quot;applicationContext.xml&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;code&gt;applicationContext.xml&lt;/code&gt;&lt;/strong&gt;&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;It’s a IOC container like &lt;code&gt;BeanFactory&lt;/code&gt; with more extensions&lt;/li&gt;
&lt;li&gt;Doesn’t have to be named &lt;code&gt;applicationContext.xml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;A simple view of Spring is that it is Hashmap of objects&lt;ul&gt;
&lt;li&gt;Objects are name/value pairs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;It can be used as a simple Registry&lt;/li&gt;
&lt;li&gt;There are namespaces that aid in configuration and validation&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ApplicationContext appContext = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ClassPathXmlApplicationContext(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; String[]&amp;#123;“applicationContext.xml”&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Object obj = appContext.getBean(&lt;span class=&quot;string&quot;&gt;&quot;Object&quot;&lt;/span&gt;, Object.class)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Import multiple configuration files&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;beans&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;resource&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;”spring-dao.xml”/&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;resource&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;”spring-service.xml”/&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;resource&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;”spring-action.xml”/&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       ...  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       ... &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;beans&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h5 id=&quot;Beans&quot;&gt;&lt;a href=&quot;#Beans&quot; class=&quot;headerlink&quot; title=&quot;Beans&quot;&gt;&lt;/a&gt;&lt;strong&gt;Beans&lt;/strong&gt;&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Essentially classes&lt;/li&gt;
&lt;li&gt;Defining beans replaces using the keyword “new”&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Define the class by using the interface&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Id&lt;/strong&gt; or &lt;strong&gt;Name&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Can be used interchaneably&lt;/li&gt;
&lt;li&gt;Id has to be a valid XML identifier&lt;/li&gt;
&lt;li&gt;Name can contain special characters&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Constructor Args&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Used to refernce properties of the constructor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Properties&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Getters and Setters of the &lt;code&gt;POJO&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Ref. to other beans that we have defined&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Values&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Basic primitive values that are setting on &lt;code&gt;POJO&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Default No-Args Constructor&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Setter Injection v.s. Constructor Injection&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h5 id=&quot;Setter-Injection&quot;&gt;&lt;a href=&quot;#Setter-Injection&quot; class=&quot;headerlink&quot; title=&quot;Setter Injection&quot;&gt;&lt;/a&gt;&lt;strong&gt;Setter Injection&lt;/strong&gt;&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The class should provide corresponding setters and getters. Setter injection is more common.&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;prop1&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;ref&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;prop2&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;ref&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       ... &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h5 id=&quot;Constructor-Injection&quot;&gt;&lt;a href=&quot;#Constructor-Injection&quot; class=&quot;headerlink&quot; title=&quot;Constructor Injection&quot;&gt;&lt;/a&gt;&lt;strong&gt;Constructor Injection&lt;/strong&gt;&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The class should provide appropriate class constructor. Constructor injection guarantees the contract.&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;constructor-arg&lt;/span&gt;&amp;gt;&lt;/span&gt;para1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;constructor-arg&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;constructor-arg&lt;/span&gt;&amp;gt;&lt;/span&gt;para2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;constructor-arg&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;constructor-arg&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;index&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;ref&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       ... &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Index&lt;/code&gt; field indicates the arguments’ indexes.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h5 id=&quot;Autowiring&quot;&gt;&lt;a href=&quot;#Autowiring&quot; class=&quot;headerlink&quot; title=&quot;Autowiring&quot;&gt;&lt;/a&gt;&lt;strong&gt;Autowiring&lt;/strong&gt;&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Spring can automatically wire beans together&lt;/li&gt;
&lt;li&gt;byType&lt;ul&gt;
&lt;li&gt;Allows a property to be autowired if exactly one bean of the property type exists in the container. A fatal exception is thrown if more than one exists.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;byName&lt;ul&gt;
&lt;li&gt;By property name. Spring looks for a bean with the same name as the property that needs to be autowired&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Constructor&lt;ul&gt;
&lt;li&gt;Similar to byType, but applies to constructor arguments. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example,&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--need appropriate constructor--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;autowire&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;constructor&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--need default constructor and setter--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;autowire&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;byType&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--looking for the type of setter&#39;s parameter--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--need default constructor and setter--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;autowire&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;byName&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--looking for setter&#39;s name--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h5 id=&quot;Set-Injection&quot;&gt;&lt;a href=&quot;#Set-Injection&quot; class=&quot;headerlink&quot; title=&quot;Set Injection&quot;&gt;&lt;/a&gt;&lt;strong&gt;Set Injection&lt;/strong&gt;&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--set or list--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;set&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;value1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;value2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;              &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;set&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--map--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;map&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;key&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;k1&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;key&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;k2&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;              &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;map&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--properties--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;props&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;prop&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;key&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;k1&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;prop&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;key&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;k2&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;              &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;props&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Spring-Annotation&quot;&gt;&lt;a href=&quot;#Spring-Annotation&quot; class=&quot;headerlink&quot; title=&quot;Spring Annotation&quot;&gt;&lt;/a&gt;&lt;strong&gt;Spring Annotation&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Part of the context namespace&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;xmlns:context=&quot;http://www.springframework.org/schema/context&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;xsi:schemaLocation=&quot;http://www.springframework.org/schema/context&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;http://www.springframework.org/schema/context/spring-context-2.5.xsd&quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Two elements have to be configured &lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;context:annotation-config&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;context:component-scan&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;base-package&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;com.projectname&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h5 id=&quot;Stereotype-Annotation&quot;&gt;&lt;a href=&quot;#Stereotype-Annotation&quot; class=&quot;headerlink&quot; title=&quot;Stereotype Annotation&quot;&gt;&lt;/a&gt;&lt;strong&gt;Stereotype Annotation&lt;/strong&gt;&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;@Component&lt;ul&gt;
&lt;li&gt;Regular components / beans, any &lt;code&gt;POJO&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;@Service&lt;ul&gt;
&lt;li&gt;Service tier where business logic is contained&lt;/li&gt;
&lt;li&gt;e.g. &lt;code&gt;@Service(&amp;quot;customerService&amp;quot;)&lt;/code&gt;    &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;@Controller&lt;ul&gt;
&lt;li&gt;Control layer / actions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;@Repository&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Data access tier / database interaction layer&lt;/li&gt;
&lt;li&gt;e.g. &lt;code&gt;@Repository(&amp;quot;userDao&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Autowired&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;member variables &lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Autowired&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; CustomerRepository customerRepository;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;uses reflection to set it&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Constructor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Setter&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;call the actual setter&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Java-Configuration&quot;&gt;&lt;a href=&quot;#Java-Configuration&quot; class=&quot;headerlink&quot; title=&quot;Java Configuration&quot;&gt;&lt;/a&gt;&lt;strong&gt;Java Configuration&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;No XML&lt;/li&gt;
&lt;li&gt;@Configuration is a class level annotation&lt;/li&gt;
&lt;li&gt;@Bean is a method level annotation&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Configuration&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AppConfig&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Bean&lt;/span&gt;(name = &lt;span class=&quot;string&quot;&gt;&quot;customerService&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; CustomerService &lt;span class=&quot;title&quot;&gt;getCustomerService&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CustomerServiceImpl();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ApplicationContext appContext = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AnnotationConfigApplicationContext(AppConfig.class);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Autowired&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@ComponentScan({&amp;quot;com.xxx&amp;quot;})&lt;/code&gt;, class level annotation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Singleton Scope&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@Scope(&amp;quot;singleton&amp;quot;)&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Prototype Scope &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@Scope(&amp;quot;prototype&amp;quot;)&lt;/code&gt;    &lt;/li&gt;
&lt;li&gt;A new instance per request&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Web Scopes&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Refer to Spring MVC&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Request&lt;ul&gt;
&lt;li&gt;Return a single bean per HTTP Request&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Session&lt;ul&gt;
&lt;li&gt;Return a single bean per HTTP Session  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GlobalSession     &lt;ul&gt;
&lt;li&gt;Return a single bean per per Application&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Spring-Boot&quot;&gt;&lt;a href=&quot;#Spring-Boot&quot; class=&quot;headerlink&quot; title=&quot;Spring Boot&quot;&gt;&lt;/a&gt;&lt;strong&gt;Spring Boot&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Spring boot makes it easy to create stand-alone, production-grade Spring based Applications that you can “just run”. Most Spring Boot applications need very little Spring configuration.&lt;/p&gt;
&lt;p&gt;Features:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create stand-alone Spring applications&lt;/li&gt;
&lt;li&gt;Embed Tomcat, Jetty or Undertow directly (no need to deploy WAR files)&lt;/li&gt;
&lt;li&gt;Provide opinionated ‘starter’ POMs to simplify your Maven configuration&lt;/li&gt;
&lt;li&gt;Automatically configure Spring whenever possible&lt;/li&gt;
&lt;li&gt;Provide production-ready features such as metrics and health checks&lt;/li&gt;
&lt;li&gt;Absolutely no code generation and no requirement for XML configuration&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Configuration of spring boot in &lt;code&gt;pom.xml&lt;/code&gt; &lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- Spring Boot : parent dependency --&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;parent&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-parent&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.3.6.RELEASE&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;parent&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-web&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Create a controller&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Controller&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@EnableAutoConfiguration&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DoSthController&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@RequestMapping&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;divide&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a / b;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//// create a main funtion to run here&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//public static void main(String[] args) throws Exception &amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//    SpringApplication.run(DoSthController.class, args);&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Or create an seperate spring application&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@SpringBootApplication&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DoSthApplication&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        SpringApplication.run(DoSthApplication.class, args);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Create a unit test&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DoSthControllerTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testDivide_success&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        assertEquals(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DoSthController().divide(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;(expected = Exception.class)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testDivide_fail&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        DoSthController doSth = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DoSthController();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        doSth.divide(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Start &lt;code&gt;Tomcat&lt;/code&gt;, then right-click and run &lt;code&gt;DoSthApplication&lt;/code&gt;, or just run the test class and the test methods.&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Inversion of Control (IoC)&lt;/strong&gt;: The core of the Spring framework is based on the principle of IoC. IoC is a technique that externalizes the creation and management of component dependencies. &lt;/p&gt;
&lt;p&gt;A alternative descriptive name is &lt;strong&gt;Dependency Injection (DI)&lt;/strong&gt;. Such behavior takes place at runtime, in which an instance of class A is provided to class B by some external process if B depends on A to perform some processing.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Aspect Oriented Programing (AOP)&lt;/strong&gt;: AOP provids another way of thinking about program structure. The key unit of modularity in OOP is the class, whereas in AOP the unit of modularity is the aspect. Aspects enable the modularization of concerns such as transaction management, log management, and input field validation that cut across multiple types and objects. &lt;/p&gt;
&lt;p&gt;The best document: &lt;a href=&quot;http://docs.spring.io/spring/docs/current/spring-framework-reference/html/&quot;&gt;Spring Framework Documents&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Spring" scheme="http://volcanohong.github.com/categories/Spring/"/>
    
    
      <category term="java" scheme="http://volcanohong.github.com/tags/java/"/>
    
      <category term="unit test" scheme="http://volcanohong.github.com/tags/unit-test/"/>
    
      <category term="spring" scheme="http://volcanohong.github.com/tags/spring/"/>
    
      <category term="mvc" scheme="http://volcanohong.github.com/tags/mvc/"/>
    
  </entry>
  
  <entry>
    <title>MySQL notes I</title>
    <link href="http://volcanohong.github.com/2016/07/29/mysql-notes-1/"/>
    <id>http://volcanohong.github.com/2016/07/29/mysql-notes-1/</id>
    <published>2016-07-30T04:37:31.000Z</published>
    <updated>2016-07-30T04:37:31.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Install-MySQL&quot;&gt;&lt;a href=&quot;#Install-MySQL&quot; class=&quot;headerlink&quot; title=&quot;Install MySQL&quot;&gt;&lt;/a&gt;&lt;strong&gt;Install MySQL&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Here are the instructions for installing MySQL on a MacOS by using &lt;code&gt;homebrew&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;First, ensure that &lt;code&gt;homebrew&lt;/code&gt; is up to date and ready to brew&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;brew update&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;brew doctor&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;brew upgrade&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;brew update&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Installed mysql&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;brew install mysql&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Run the commands that brew suggested&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Try it first:&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mysql_install_db --verbose --user=`whoami` --basedir=&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(brew --prefix mysql)&lt;/span&gt;&quot;&lt;/span&gt; --datadir=/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/var/mysql --tmpdir=/tmp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;IF HAVING ERROR&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mysql_install_db: [ERROR] unknown variable &lt;span class=&quot;string&quot;&gt;&#39;tmpdir=/tmp&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;TRY THIS INSTEAD&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mysqld -initialize --verbose --user=whoami --basedir=&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(brew --prefix mysql)&lt;/span&gt;&quot;&lt;/span&gt; --datadir=/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/var/mysql --tmpdir=/tmp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start MySQL server &lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mysql.server start&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;MySQL configuration&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mysql_secure_installation&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Add the following my.cnf file to /etc:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;## The MySQL database server configuration file.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# You can copy this to one of:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# - &amp;quot;/etc/mysql/my.cnf&amp;quot; to set global options,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# - &amp;quot;~/.my.cnf&amp;quot; to set user-specific options.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# One can use all long options that the program supports.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Run program with --help to get a list of available options and with&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# --print-defaults to see which it would actually understand and use.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# For explanations see&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# http://dev.mysql.com/doc/mysql/en/server-system-variables.html&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# This will be passed to all mysql clients&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# It has been reported that passwords should be enclosed with&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# ticks/quotes escpecially if they contain &amp;quot;#&amp;quot; chars...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Remember to edit /etc/mysql/debian.cnf when changing&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# the socket location.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[client]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;port        = 3306&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#socket     = /var/run/mysqld/mysqld.sock&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Here is entries for some specific programs&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# The following values assume you have at least 32M ram&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# This was formally known as [safe_mysqld]. Both versions&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# are currently parsed.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[mysqld_safe]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#socket     = /var/run/mysqld/mysqld.sock&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#nice       = 0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[mysqld]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# * Basic Settings&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# * IMPORTANT&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#   If you make changes to these settings and your system uses&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#   apparmor, you may also need to also adjust&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#   /etc/apparmor.d/usr.sbin.mysqld.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#user       = mysql&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#socket     = /var/run/mysqld/mysqld.sock&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;port        = 3306&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#basedir    = /usr&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#datadir    = /var/lib/mysql&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#tmpdir     = /tmp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;skip-external-locking&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Instead of skip-networking the default is now to listen only on&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# localhost which is more compatible and is not less secure.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;bind-address        = 127.0.0.1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# * Fine Tuning&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;key_buffer          = 16M&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;max_allowed_packet  = 16M&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;thread_stack        = 192K&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;thread_cache_size   = 8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# This replaces the startup script and checks MyISAM tables if needed&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# the first time they are touched&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;myisam-recover         = BACKUP&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#max_connections       = 100&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#table_cache           = 64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#thread_concurrency    = 10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# * Query Cache Configuration&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;query_cache_limit   = 1M&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;query_cache_size    = 16M&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# * Logging and Replication&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Both location gets rotated by the cronjob.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Be aware that this log type is a performance killer.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# As of 5.1 you can enable the log at runtime!&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#general_log_file        = /var/log/mysql/mysql.log&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#general_log             = 1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;log_error                = /var/log/mysql/error.log&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Here you can see queries with especially long duration&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#log_slow_queries   = /var/log/mysql/mysql-slow.log&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#long_query_time = 2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#log-queries-not-using-indexes&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# The following can be used as easy to replay backup logs or&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# for replication.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# note: if you are setting up a replication slave, see&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#       README.Debian about other settings you may need&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#       to change.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#server-id          = 1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#log_bin            = /var/log/mysql/mysql-bin.log&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;expire_logs_days    = 10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;max_binlog_size     = 100M&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#binlog_do_db       = include_database_name&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#binlog_ignore_db   = include_database_name&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# * InnoDB&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# InnoDB is enabled by default with a 10MB datafile in /var/lib/mysql/.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Read the manual for more InnoDB related options. There are many!&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# * Security Features&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Read the manual, too, if you want chroot!&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# chroot = /var/lib/mysql/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# For generating SSL certificates I recommend the OpenSSL GUI &amp;quot;tinyca&amp;quot;.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# ssl-ca=/etc/mysql/cacert.pem&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# ssl-cert=/etc/mysql/server-cert.pem&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# ssl-key=/etc/mysql/server-key.pem&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Query Caching&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;query-cache-type = 1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Default to InnoDB&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;default-storage-engine=innodb&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[mysqldump]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;quick&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;quote-names&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;max_allowed_packet  = 16M&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[mysql]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#no-auto-rehash # faster start of mysql but no tab completition&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[isamchk]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;key_buffer      = 16M&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Go to MySQL console&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mysql -h localhost -u root -p&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Create database&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;create database dbName;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Create user&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;create user username@localhost identified by &lt;span class=&quot;string&quot;&gt;&#39;password&#39;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Grant privilege&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;GRANT ALL PRIVILEGES ON newpal.* TO username@localhost WITH GRANT OPTION;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;Some commands:&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Restart the MySQL server&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mysql.server restart&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Stop MySQL server&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mysql.server stop&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check if a MySQL instance is runnig&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ps ax | grep mysql&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Check MySQL status&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mysqladmin -u root -p status&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Changing the permission to MySQL folder. If you are working locally, you can try:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo chmod -R 755 /var/lib/mysql/&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Export MySQL DB&lt;br&gt;mysqldump -u dbName1 -p dbName2 &amp;gt; fileName.sql&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: The &lt;code&gt;.sql&lt;/code&gt; file might be large. You may &lt;code&gt;gzip&lt;/code&gt; it and then use &lt;code&gt;sftp&lt;/code&gt; to get it back &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Import MySQL DB&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mysql -h ip_address -u username -p dbName &amp;lt; fileName.sql&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Remove-MySQL&quot;&gt;&lt;a href=&quot;#Remove-MySQL&quot; class=&quot;headerlink&quot; title=&quot;Remove MySQL&quot;&gt;&lt;/a&gt;&lt;strong&gt;Remove MySQL&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;brew remove mysql&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;brew cleanup --force&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;rm ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo rm -rf /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/var/mysql&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Install-MySQL&quot;&gt;&lt;a href=&quot;#Install-MySQL&quot; class=&quot;headerlink&quot; title=&quot;Install MySQL&quot;&gt;&lt;/a&gt;&lt;strong&gt;Install MySQL&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Here are the instructions for installing MySQL on a MacOS by using &lt;code&gt;homebrew&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;First, ensure that &lt;code&gt;homebrew&lt;/code&gt; is up to date and ready to brew&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;brew update&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;brew doctor&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;brew upgrade&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;brew update&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Installed mysql&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;brew install mysql&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Database" scheme="http://volcanohong.github.com/categories/Database/"/>
    
    
      <category term="shell" scheme="http://volcanohong.github.com/tags/shell/"/>
    
      <category term="command" scheme="http://volcanohong.github.com/tags/command/"/>
    
      <category term="database" scheme="http://volcanohong.github.com/tags/database/"/>
    
      <category term="mysql" scheme="http://volcanohong.github.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Hippo notes I</title>
    <link href="http://volcanohong.github.com/2016/07/18/hippo-notes-1/"/>
    <id>http://volcanohong.github.com/2016/07/18/hippo-notes-1/</id>
    <published>2016-07-19T04:00:00.000Z</published>
    <updated>2016-07-23T01:57:18.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hippo is a java based Content Management System (CMS) that allows you to create, control, and deliver engaging content to your visitors in every channel. Hippo CMS is an open-source, dual licensed platform.&lt;/p&gt;
&lt;p&gt;Ref: &lt;a href=&quot;https://www.onehippo.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;onehippo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There are three components to Hippo CMS (&lt;a href=&quot;https://en.wikipedia.org/wiki/Hippo_CMS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;wiki&lt;/a&gt;):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Delivery tier&lt;br&gt; The Hippo Site Toolkit is the presentation framework, using either &lt;code&gt;JSP&lt;/code&gt; or &lt;code&gt;FreeMarker&lt;/code&gt; to generate pages. Alternatively a &lt;code&gt;EST API&lt;/code&gt; can be defined to serve structured content.&lt;/li&gt;
&lt;li&gt;Interface&lt;br&gt; The user interface through which the content management and administrative functionalities can be used.&lt;/li&gt;
&lt;li&gt;Content repository&lt;br&gt; All content, metadata and configuration is stored in a modified version of &lt;code&gt;Apache Jackrabbit&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;With Hippo’s open-source technology which integrates with a wide range of tools and data sources, you can analyse the behaviour of your visitors and optimise the performance of your content in any context, whether it’s web, mobile, social, apps, displays, billboards, or Internet-of-Things devices. It’s also easy to experiment and build new digital properties rapidly with Hippo’s open architecture and easy-to-use interface, bringing businesses the agility and freedom needed for creating the best next personalized digital customer experience.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Getting-Started&quot;&gt;&lt;a href=&quot;#Getting-Started&quot; class=&quot;headerlink&quot; title=&quot;Getting Started&quot;&gt;&lt;/a&gt;&lt;strong&gt;Getting Started&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn Hippo: &lt;a href=&quot;https://www.onehippo.org/trails/demo-tutorials-and-download.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Demo, Tutorials &amp;amp; downloads&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Step 1&lt;/em&gt;: Create the ‘myhippoproject’ from the Hippo maven archetype using the command below.&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mvn archetype:generate \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-DarchetypeGroupId=org.onehippo.cms7 \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-DarchetypeArtifactId=hippo-project-archetype \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-DarchetypeVersion=4.0.0 \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-DarchetypeRepository=http://maven.onehippo.com/maven2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Do not use special characters such as dot or dash in the artifactId. Also avoid using ‘cms’ or ‘hippo’ as artifactId because these are known to cause naming conflicts.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Type &lt;code&gt;n&lt;/code&gt; at the prompt if you want to customize your project name or other parameters.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Step 2&lt;/em&gt;: Go to your project root folder ‘myhippoproject’and build your new project.&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; myhippoproject&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mvn clean verify&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;If you are doing this for the first time, it might take some time as Maven will download all project dependencies from a remote repository server.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Step 3&lt;/em&gt;: Launch Hippo CMS by running the following command in &lt;code&gt;myhippoproject&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mvn -P cargo.run -Drepo.path=storage&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;This creates WAR files and immediately runs the project using &lt;code&gt;Cargo&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Hippo CMS is now running and you are ready to start implementing your Hippo-based website. &lt;/p&gt;
&lt;p&gt;Hippo CMS UI at &lt;code&gt;http://localhost:8080/cms&lt;/code&gt;&lt;br&gt;    Use admin/admin or editor/editor or author/author as username/password combination. &lt;/p&gt;
&lt;p&gt;Hippo CMS Console at &lt;code&gt;http://localhost:8080/cms/console&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Setup Application at &lt;code&gt;http://localhost:8080/essentials&lt;/code&gt;&lt;br&gt;    The setup application provides a Feature Library from which features can be added to your project.&lt;br&gt;    The first time you use the application it will show a setup screen. Read carefully and if needed, change the default parameters before clicking on Get Started.&lt;/p&gt;
&lt;p&gt;Website at &lt;code&gt;http://localhost:8080/site&lt;/code&gt;&lt;br&gt;    The website will initially be empty. Once you have added some features from the library to the site it will render them using a default &lt;a href=&quot;http://getbootstrap.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bootstrap&lt;/a&gt; theme.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Setup-Hippo-Project&quot;&gt;&lt;a href=&quot;#Setup-Hippo-Project&quot; class=&quot;headerlink&quot; title=&quot;Setup Hippo Project&quot;&gt;&lt;/a&gt;&lt;strong&gt;Setup Hippo Project&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;Choose templating language&lt;br&gt; Either &lt;code&gt;JSP&lt;/code&gt; or &lt;code&gt;FreeMarker&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The project needs to rebuild after adding plugins&lt;/li&gt;
&lt;li&gt;Note that the pending changes will be deleted automatically by the setup application.&lt;/li&gt;
&lt;li&gt;You don’t need to rebuild for every single feature you add to the project, it is sufficient to rebuild after you added a batch of features.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h5 id=&quot;Hello-page&quot;&gt;&lt;a href=&quot;#Hello-page&quot; class=&quot;headerlink&quot; title=&quot;Hello page&quot;&gt;&lt;/a&gt;&lt;strong&gt;Hello page&lt;/strong&gt;&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Compile and run the project by using the following Maven commands:&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mvn verify&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mvn –P cargo.run&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Put the &lt;code&gt;home.jsp&lt;/code&gt; file in &lt;code&gt;site/src/main/webapp/WEB-INF/jsp/&lt;/code&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Open hippo console, in the &lt;code&gt;hst:hst/hst:configurations/myhippoproject/hst:templates&lt;/code&gt;,  add a node and name it &lt;code&gt;homepage&lt;/code&gt;. Add property &lt;code&gt;hst:renderpath&lt;/code&gt; with value &lt;code&gt;jsp/home.jsp&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Select the &lt;code&gt;hst:pages&lt;/code&gt; node and add a child node called &lt;code&gt;home&lt;/code&gt; of type &lt;code&gt;hst:component&lt;/code&gt;. Add a property &lt;code&gt;hst:template&lt;/code&gt; to the home node with the value &lt;code&gt;homepage&lt;/code&gt; (referring to the homepage just created). &lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select the &lt;code&gt;hst:sitemap&lt;/code&gt; node and add a child node called &lt;code&gt;root&lt;/code&gt; of type &lt;code&gt;hst:sitemapitem&lt;/code&gt;. Add a property called &lt;code&gt;hst:componentconfigurationid&lt;/code&gt; and set the value to &lt;code&gt;hst:pages/home&lt;/code&gt; (referring to the page configuration just created).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In Hippo, each page configuration consists of a hierarchy of components. Each component has their own template. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click on the &lt;code&gt;Write changes to repository&lt;/code&gt; button in the top right corner.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Open the site ( &lt;a href=&quot;http://localhost:8080/site/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:8080/site/&lt;/a&gt;) to see the wonderfully simple page created.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Not convenient&lt;/em&gt;: every time making a change to the &lt;code&gt;.jsp&lt;/code&gt; file, the project needs to rebuild.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h4 id=&quot;MVC-in-Hippo-A-Hello-Page&quot;&gt;&lt;a href=&quot;#MVC-in-Hippo-A-Hello-Page&quot; class=&quot;headerlink&quot; title=&quot;MVC in Hippo: A Hello Page&quot;&gt;&lt;/a&gt;&lt;strong&gt;MVC in Hippo: A Hello Page&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;View&lt;br&gt;In &lt;code&gt;http://localhost:8080/cms/&lt;/code&gt; -&amp;gt; &lt;code&gt;content&lt;/code&gt;&lt;br&gt;  a. Create a document type&lt;br&gt;  b. Create a document&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Model&lt;br&gt; In &lt;code&gt;http://localhost:8080/essentials/&lt;/code&gt;, &lt;code&gt;Tools&lt;/code&gt; tab,  click on &lt;code&gt;Use Beanwriter&lt;/code&gt;. It will generate the beans for you. Then in &lt;code&gt;site/src/main/java/org/example/beans/Simpledocument.java&lt;/code&gt;,&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@HippoEssentialsGenerated&lt;/span&gt;(internalName = &lt;span class=&quot;string&quot;&gt;&quot;myhippoproject:simpledocument&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Node&lt;/span&gt;(jcrType = &lt;span class=&quot;string&quot;&gt;&quot;myhippoproject:simpledocument&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Simpledocument&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BaseDocument&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;meta&quot;&gt;@HippoEssentialsGenerated&lt;/span&gt;(internalName = &lt;span class=&quot;string&quot;&gt;&quot;myhippoproject:title&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getTitle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; getProperty(&lt;span class=&quot;string&quot;&gt;&quot;myhippoproject:title&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;meta&quot;&gt;@HippoEssentialsGenerated&lt;/span&gt;(internalName = &lt;span class=&quot;string&quot;&gt;&quot;myhippoproject:content&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; HippoHtml &lt;span class=&quot;title&quot;&gt;getContent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; getHippoHtml(&lt;span class=&quot;string&quot;&gt;&quot;myhippoproject:content&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;Controller&lt;br&gt; Create a new Java class in the site module, in the package &lt;code&gt;org.example.components&lt;/code&gt;, named &lt;code&gt;SimpleComponent&lt;/code&gt; with&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; org.example.components;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.example.beans.Simpledocument;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.hippoecm.hst.component.support.bean.BaseHstComponent;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.hippoecm.hst.core.component.HstComponentException;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.hippoecm.hst.core.component.HstRequest;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.hippoecm.hst.core.component.HstResponse;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.hippoecm.hst.core.request.HstRequestContext;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.slf4j.Logger;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.slf4j.LoggerFactory;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SimpleComponent&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BaseHstComponent&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Logger log = LoggerFactory.getLogger(SimpleComponent.class);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;doBeforeRender&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; HstRequest request, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; HstResponse response)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; HstComponentException &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.doBeforeRender(request, response);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; HstRequestContext ctx = request.getRequestContext();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Retrieve the document based on the URL&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Simpledocument document = (Simpledocument) ctx.getContentBean();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (document != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Put the document on the request&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            request.setAttribute(&lt;span class=&quot;string&quot;&gt;&quot;document&quot;&lt;/span&gt;, document);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;Dynamic view&lt;br&gt;In &lt;code&gt;home.ftl&lt;/code&gt; file,&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;#assign&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;hst&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;JspTaglibs[&lt;/span&gt;&quot;&lt;span class=&quot;attr&quot;&gt;http:&lt;/span&gt;//&lt;span class=&quot;attr&quot;&gt;www.hippoecm.org&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;jsp&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;hst&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;core&lt;/span&gt;&quot;] &amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;#if&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;document&lt;/span&gt;??&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;document.title?html&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;@hst.html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;hippohtml&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;document.content&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;#else&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Goodbye? cruel world&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;#if&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;Rebuild project&lt;/li&gt;
&lt;li&gt;Configure the MVC Component&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In &lt;code&gt;cms/console&lt;/code&gt;:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/hst:hst/hst:configurations/myhippoproject/hst:components&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    + simplecomponent [hst:component]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        - hst:componentclassname = org.example.components.SimpleComponent&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/hst:hst/hst:configurations/myhippoproject/hst:pages/home&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    - hst:referencecomponent = hst:components/simplecomponent&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    - hst:template = homepage&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;Map the URL to the Content&lt;br&gt;The template engine currently executes the logic for not having a document present. This makes sense, because you have configure your view and your controller, but not yet where to retrieve your model (and thus, your document).&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/hst:hst/hst:configurations/myhippoproject/hst:sitemap/root&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    - hst:componentconfigurationid = hst:pages/home&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    - hst:relativecontentpath = hello-world&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Resolve-Links-to-Static-Resources&quot;&gt;&lt;a href=&quot;#Resolve-Links-to-Static-Resources&quot; class=&quot;headerlink&quot; title=&quot;Resolve Links to Static Resources&quot;&gt;&lt;/a&gt;&lt;strong&gt;Resolve Links to Static Resources&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The exact URLs of those static resources depend on the context in which the application is deployed. They must be resolved dynamically using &amp;lt;@hst.webfile&amp;gt;.&lt;/p&gt;
&lt;p&gt;E.g., replace:&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;media&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;screen&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;css/yui-css.css&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;to&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;media&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;screen&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/css&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;@hst.webfile path=&quot;&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;css&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;yui-css.css&lt;/span&gt;&quot;/&amp;gt;&quot; /&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that the path attribute of the &amp;lt;@hst.webfile&amp;gt; tag starts with a slash, where the original href attribute of the &amp;lt; link&amp;gt; element didn’t.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Include-Head-Contributions&quot;&gt;&lt;a href=&quot;#Include-Head-Contributions&quot; class=&quot;headerlink&quot; title=&quot;Include Head Contributions&quot;&gt;&lt;/a&gt;&lt;strong&gt;Include Head Contributions&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Components further down in the hierarchy may require additional CSS and Javascript files to be loaded. In that case those components will make a head contribution. The top level component’s template must include those contributions.&lt;/p&gt;
&lt;p&gt;Inside the html &lt;head&gt; element, just before the closing &lt;/head&gt; tag, insert the following line:&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;@hst.headContributions&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;categoryIncludes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;htmlHead&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;xhtml&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;true/&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Inside the html &lt;body&gt; element, just before the closing &lt;/body&gt; tag, insert the following line:&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;@hst.headContributions&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;categoryIncludes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;htmlBodyEnd&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;xhtml&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;true/&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Open the file &lt;code&gt;bootstrap/webfiles/src/main/resources/site/freemarker/hstdefault/essentials-carousel.ftl&lt;/code&gt;. This is the template for the out-of-the-box banner carousel.&lt;br&gt;In the template you can see an example of head contributions:&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;@hst.headContribution&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;category&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;htmlBodyEnd&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;@hst.link path=&quot;&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;js&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;jquery-2.1.0.min.js&lt;/span&gt;&quot;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&quot;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;@hst.headContribution&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;@hst.headContribution&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;category&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;htmlBodyEnd&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;@hst.link path=&quot;&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;js&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;bootstrap.min.js&lt;/span&gt;&quot;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&quot;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;@hst.headContribution&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Include-Pages&quot;&gt;&lt;a href=&quot;#Include-Pages&quot; class=&quot;headerlink&quot; title=&quot;Include Pages&quot;&gt;&lt;/a&gt;&lt;strong&gt;Include Pages&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Include other &lt;code&gt;html&lt;/code&gt; markup by using code&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;@hst.include&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;ref&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;menu&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Generate dynamic menus in &lt;code&gt;bootstrap/webfiles/src/main/resources/site/freemarker/gogreen/base-top-menu.ftl&lt;/code&gt;. (Note that the file name and ref name is of difference.)&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;#include&lt;/span&gt; &quot;&lt;span class=&quot;attr&quot;&gt;..&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;include&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;imports.ftl&lt;/span&gt;&quot;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;#if&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;menu&lt;/span&gt;??&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;#if&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;menu.siteMenuItems&lt;/span&gt;??&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;nav&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;navigation&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;main-navigation&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;#list&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;menu.siteMenuItems&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;item&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;#if&lt;/span&gt;  &lt;span class=&quot;attr&quot;&gt;item.selected&lt;/span&gt; || &lt;span class=&quot;attr&quot;&gt;item.expanded&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;@hst.link link=item.hstLink/&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;activelink&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;label-nav&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;item.name?html&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;#else&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;@hst.link link=item.hstLink/&amp;gt;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;label-nav&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;item.name?html&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;#if&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;#list&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;nav&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;#if&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;@hst.cmseditmenu&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;menu&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;menu/&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;#else&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;#if&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;editMode&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h5&lt;/span&gt;&amp;gt;&lt;/span&gt;[Menu Component]&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h5&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;sub&lt;/span&gt;&amp;gt;&lt;/span&gt;Click to edit Menu&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;sub&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;#if&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;#if&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;By following the same way, we have&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;@hst.include&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;ref&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- and --&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;@hst.include&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;ref&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;footer&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;with the corresponding files like and &lt;code&gt;homepage-main.ftl&lt;/code&gt; and &lt;code&gt;base-footer.ftl&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ref: &lt;a href=&quot;https://www.onehippo.org/trails/developer-trail/configure-out-of-the-box-features/base-page-configuration.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Base page configuration&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Configure-Banners&quot;&gt;&lt;a href=&quot;#Configure-Banners&quot; class=&quot;headerlink&quot; title=&quot;Configure Banners&quot;&gt;&lt;/a&gt;&lt;strong&gt;Configure Banners&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In &lt;code&gt;homepage-main.ftl&lt;/code&gt;, add a container.&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;#include&lt;/span&gt; &quot;&lt;span class=&quot;attr&quot;&gt;..&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;include&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;imports.ftl&lt;/span&gt;&quot;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;@hst.include&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;ref&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;container&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Then, in &lt;code&gt;http://localhost:8080/cms/&lt;/code&gt;, add images in &lt;code&gt;Content/Images&lt;/code&gt; -&amp;gt; folder banners.&lt;/p&gt;
&lt;p&gt;Then, create banner documents in &lt;code&gt;Content/Documents&lt;/code&gt; -&amp;gt; folder banners.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add related banner image and artical link&lt;/li&gt;
&lt;li&gt;Publish it&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Then, in &lt;code&gt;Channel/YourWebsite/&lt;/code&gt;, click &lt;code&gt;Edit&lt;/code&gt;. Drag the &lt;code&gt;Carousel&lt;/code&gt; component icon into the rectangle labeled &lt;code&gt;container&lt;/code&gt; in the home page’s main content area. &lt;/p&gt;
&lt;p&gt;A configuration dialog will appear. In the &lt;code&gt;Carousel Item 1&lt;/code&gt; field click on the looking glass icon, browse to one of the Banner documents you added and select it. Click &lt;code&gt;Save&lt;/code&gt;, then close the configuration dialog. The Banner Carousel now displays the selected banners.&lt;/p&gt;
&lt;p&gt;Click &lt;code&gt;Changes&lt;/code&gt;, then &lt;code&gt;Publish&lt;/code&gt;. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Confiure-Search&quot;&gt;&lt;a href=&quot;#Confiure-Search&quot; class=&quot;headerlink&quot; title=&quot;Confiure Search&quot;&gt;&lt;/a&gt;&lt;strong&gt;Confiure Search&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Test search plugin: &lt;code&gt;http://localhost:8080/site/search?query=news&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In &lt;code&gt;base-layout.ftl&lt;/code&gt;, replace the value of the &lt;form&gt; element’s action attribute with &lt;code&gt;&amp;lt;@hst.link siteMapItemRefId=&amp;quot;search&amp;quot; /&amp;gt;&lt;/code&gt;. It should now look like this:&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;searchbox&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;@hst.link siteMapItemRefId=&quot;&lt;/span&gt;&lt;span class=&quot;attr&quot;&gt;search&lt;/span&gt;&quot; /&amp;gt;&lt;/span&gt;&quot; method=&quot;get&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;searchbox-inputtext&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;searchbox-inputtext&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;query&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;placeholder&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Search&quot;&lt;/span&gt; /&amp;gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;searchbox-icon&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;for&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;searchbox-inputtext&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;searchbox-submit&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Search&quot;&lt;/span&gt; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/form&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hippo is a java based Content Management System (CMS) that allows you to create, control, and deliver engaging content to your visitors in every channel. Hippo CMS is an open-source, dual licensed platform.&lt;/p&gt;
&lt;p&gt;Ref: &lt;a href=&quot;https://www.onehippo.com&quot;&gt;onehippo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There are three components to Hippo CMS (&lt;a href=&quot;https://en.wikipedia.org/wiki/Hippo_CMS&quot;&gt;wiki&lt;/a&gt;):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Delivery tier&lt;br&gt; The Hippo Site Toolkit is the presentation framework, using either &lt;code&gt;JSP&lt;/code&gt; or &lt;code&gt;FreeMarker&lt;/code&gt; to generate pages. Alternatively a &lt;code&gt;EST API&lt;/code&gt; can be defined to serve structured content.&lt;/li&gt;
&lt;li&gt;Interface&lt;br&gt; The user interface through which the content management and administrative functionalities can be used.&lt;/li&gt;
&lt;li&gt;Content repository&lt;br&gt; All content, metadata and configuration is stored in a modified version of &lt;code&gt;Apache Jackrabbit&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Hippo" scheme="http://volcanohong.github.com/categories/Hippo/"/>
    
    
      <category term="javascript" scheme="http://volcanohong.github.com/tags/javascript/"/>
    
      <category term="coding" scheme="http://volcanohong.github.com/tags/coding/"/>
    
      <category term="hippo" scheme="http://volcanohong.github.com/tags/hippo/"/>
    
      <category term="freemarker" scheme="http://volcanohong.github.com/tags/freemarker/"/>
    
      <category term="cms" scheme="http://volcanohong.github.com/tags/cms/"/>
    
  </entry>
  
  <entry>
    <title>Effective java notes</title>
    <link href="http://volcanohong.github.com/2016/07/16/effective-java-notes/"/>
    <id>http://volcanohong.github.com/2016/07/16/effective-java-notes/</id>
    <published>2016-07-17T04:00:00.000Z</published>
    <updated>2016-07-19T04:28:33.000Z</updated>
    
    <content type="html">&lt;!--* ### **Chapter 7: Methods**--&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Item-38-check-parameters-for-validity&quot;&gt;&lt;a href=&quot;#Item-38-check-parameters-for-validity&quot; class=&quot;headerlink&quot; title=&quot;Item 38: check parameters for validity&quot;&gt;&lt;/a&gt;&lt;strong&gt;Item 38: check parameters for validity&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;  Most methods and constructors have some restrictions on what values may be passed into their parameters. For example, index values must be non-negative and object values must be non-null.&lt;br&gt;  You should enforce them with checks at beginning of the method body.&lt;/p&gt;
  &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;  &lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Once an error occur, throw the exception as early as possible&lt;/li&gt;
&lt;li&gt;For public methods, use Javadoc @throws tag to document the exception. (&lt;code&gt;IlliegalArgumentException&lt;/code&gt;, &lt;code&gt;IndexOutofBoundsException&lt;/code&gt;, or &lt;code&gt;NullPointerException&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;For un exported methods, use &lt;code&gt;assert&lt;/code&gt; for validity checks, e.g., &lt;code&gt;assert a != null;&lt;/code&gt;. Enable assert by command &lt;code&gt;-ea&lt;/code&gt; (or &lt;code&gt;-enableassertions&lt;/code&gt;) to the java interpreter.&lt;/li&gt;
&lt;li&gt;It is particular important to check the validity of parameters that are not used by a method but are stored away for later use. (It’s quite hard to debug if there is an error in this case)&lt;/li&gt;
&lt;li&gt;Design API to be as general as it is practical to make them.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h4 id=&quot;Item-39-Make-defensive-copies-when-needed&quot;&gt;&lt;a href=&quot;#Item-39-Make-defensive-copies-when-needed&quot; class=&quot;headerlink&quot; title=&quot;Item 39: Make defensive copies when needed&quot;&gt;&lt;/a&gt;&lt;strong&gt;Item 39: Make defensive copies when needed&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;  &lt;strong&gt;Notes:&lt;/strong&gt; &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Never trust a user input data&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h4 id=&quot;Item-40-Design-method-signatures-carefully&quot;&gt;&lt;a href=&quot;#Item-40-Design-method-signatures-carefully&quot; class=&quot;headerlink&quot; title=&quot;Item 40: Design method signatures carefully&quot;&gt;&lt;/a&gt;&lt;strong&gt;Item 40: Design method signatures carefully&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;  &lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Avoid too many functions in a class | interface&lt;/li&gt;
&lt;li&gt;Avoid long parameter list (larger than 4)&lt;/li&gt;
&lt;li&gt;For parameter types, use interfaces instead of classes&lt;/li&gt;
&lt;li&gt;For control parameters, prefer two-element &lt;code&gt;enum&lt;/code&gt; types to &lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h4 id=&quot;Item-41-Use-overloading-judiciously&quot;&gt;&lt;a href=&quot;#Item-41-Use-overloading-judiciously&quot; class=&quot;headerlink&quot; title=&quot;Item 41: Use overloading judiciously&quot;&gt;&lt;/a&gt;&lt;strong&gt;Item 41: Use overloading judiciously&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;  &lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;overload&lt;/code&gt;: polymorphism in compile time; &lt;code&gt;override&lt;/code&gt;: polymorphism in run time&lt;/li&gt;
&lt;li&gt;Avoid using different types of a parameter to design overloading methods&lt;/li&gt;
&lt;li&gt;Never export two overloading with the same number of parameters&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h4 id=&quot;Item-42-Use-varargs-judiciously&quot;&gt;&lt;a href=&quot;#Item-42-Use-varargs-judiciously&quot; class=&quot;headerlink&quot; title=&quot;Item 42: Use varargs judiciously&quot;&gt;&lt;/a&gt;&lt;strong&gt;Item 42: Use varargs judiciously&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;li&gt;&lt;h4 id=&quot;Item-43-Return-empty-arrays-or-collections-not-nulls&quot;&gt;&lt;a href=&quot;#Item-43-Return-empty-arrays-or-collections-not-nulls&quot; class=&quot;headerlink&quot; title=&quot;Item 43: Return empty arrays or collections, not nulls&quot;&gt;&lt;/a&gt;&lt;strong&gt;Item 43: Return empty arrays or collections, not nulls&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;  &lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It’s arguable that a null return is preferable to an empty array in case of mitigating system expense.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The right way to return an array of a collection&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// The right way to return an array of a collection&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; List&amp;lt;Cheese&amp;gt; cheeseInStock = ...;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Cheese[] EMPTY_CHEESE_ARRAY = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Cheese[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Cheese[] getCheese() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; cheesesInStock.toArray(EMPTY_CHEESE_ARRAY);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The right way to return a copy of a collection&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// The right way to return a copy of a collection&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;Cheese&amp;gt; &lt;span class=&quot;title&quot;&gt;getCheeseList&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (cheesesInStock.isEmpty())&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Collections.emptyList(); &lt;span class=&quot;comment&quot;&gt;// Always returns same list&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Cheese&amp;gt;(cheesesInStock);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h4 id=&quot;Item-44-Write-doc-comments-for-all-exposed-API-elements&quot;&gt;&lt;a href=&quot;#Item-44-Write-doc-comments-for-all-exposed-API-elements&quot; class=&quot;headerlink&quot; title=&quot;Item 44: Write doc comments for all exposed API elements&quot;&gt;&lt;/a&gt;&lt;strong&gt;Item 44: Write doc comments for all exposed API elements&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;  &lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;@param, @return, @throws&lt;/li&gt;
&lt;li&gt;@throws starts with if statement&lt;/li&gt;
&lt;li&gt;@{code} and@{literal}&lt;/li&gt;
&lt;li&gt;Document enum and annotation types&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;!--* ### **Chapter 7: Methods**--&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Item-38-check-parameters-for-validity&quot;&gt;&lt;a href=&quot;#Item-38-check-parameters-for-validity&quot; class=&quot;headerlink&quot; title=&quot;Item 38: check parameters for validity&quot;&gt;&lt;/a&gt;&lt;strong&gt;Item 38: check parameters for validity&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;  Most methods and constructors have some restrictions on what values may be passed into their parameters. For example, index values must be non-negative and object values must be non-null.&lt;br&gt;  You should enforce them with checks at beginning of the method body.&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://volcanohong.github.com/categories/Java/"/>
    
    
      <category term="coding" scheme="http://volcanohong.github.com/tags/coding/"/>
    
      <category term="java" scheme="http://volcanohong.github.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Linux notes I</title>
    <link href="http://volcanohong.github.com/2016/07/14/linux-notes-1/"/>
    <id>http://volcanohong.github.com/2016/07/14/linux-notes-1/</id>
    <published>2016-07-14T22:00:00.000Z</published>
    <updated>2016-07-15T05:01:12.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Commands&quot;&gt;&lt;a href=&quot;#Commands&quot; class=&quot;headerlink&quot; title=&quot;Commands&quot;&gt;&lt;/a&gt;&lt;strong&gt;Commands&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;li&gt;&lt;h5 id=&quot;grep&quot;&gt;&lt;a href=&quot;#grep&quot; class=&quot;headerlink&quot; title=&quot;grep&quot;&gt;&lt;/a&gt;&lt;strong&gt;grep&lt;/strong&gt;&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;grep&lt;/code&gt; is a useful command to search text in a file.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Format&lt;/em&gt;:&lt;br&gt;&lt;code&gt;grep [–bcEFilnqsvx] [–e pattern] ... [–f patternfile] ... [pattern] [file ...]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;grep&lt;/code&gt; with multiple strings:&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/logs/xxx | grep &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;error&#39;&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;falure&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;grep&lt;/code&gt; with highlight color:&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;egrep --color=auto -i &lt;span class=&quot;string&quot;&gt;&#39;(error|fatal|warn|drop)&#39;&lt;/span&gt; /logs/xxx&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Change &lt;code&gt;grep&lt;/code&gt; display color: following will set background to red and foreground to white:&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; GREP_OPTIONS=&lt;span class=&quot;string&quot;&gt;&#39;--color=auto&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; GREP_COLOR=&lt;span class=&quot;string&quot;&gt;&#39;1;37;41&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Useful links:&lt;br&gt;&lt;a href=&quot;http://linuxcommand.org/writing_shell_scripts.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing shell scripts&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.ibm.com/support/knowledgecenter/SSLTBW_1.13.0/com.ibm.zos.r13.bpxa500/grep.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Search a file for a specified pattern&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;Commands&quot;&gt;&lt;a href=&quot;#Commands&quot; class=&quot;headerlink&quot; title=&quot;Commands&quot;&gt;&lt;/a&gt;&lt;strong&gt;Commands&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;li&gt;&lt;h5 id=&quot;grep&quot;
    
    </summary>
    
      <category term="Blog" scheme="http://volcanohong.github.com/categories/Blog/"/>
    
    
      <category term="linux" scheme="http://volcanohong.github.com/tags/linux/"/>
    
      <category term="shell" scheme="http://volcanohong.github.com/tags/shell/"/>
    
      <category term="command" scheme="http://volcanohong.github.com/tags/command/"/>
    
  </entry>
  
</feed>
